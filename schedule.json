[{"Description": "", "Title": "Conference Opening & Housekeeping", "Event": 2, "Start": "2013-07-06 09:00:00", "Duration": "0:15:00", "Id": 1, "Room Name": "Plenary Hall"}, {"Description": "", "Title": "Morning Tea", "Event": 4, "Start": "2013-07-06 10:00:00", "Duration": "0:20:00", "Id": 2, "Room Name": "Exhibition Foyer"}, {"Description": "", "Title": "Lunch", "Event": 5, "Start": "2013-07-06 12:00:00", "Duration": "1:00:00", "Id": 3, "Room Name": "Exhibition Foyer"}, {"Description": "", "Title": "Afternoon Tea", "Event": 6, "Start": "2013-07-06 14:50:00", "Duration": "0:20:00", "Id": 4, "Room Name": "Exhibition Foyer"}, {"Description": "", "Title": "Lightning Talks", "Event": 8, "Start": "2013-07-06 16:30:00", "Duration": "1:00:00", "Id": 5, "Room Name": "Plenary Hall"}, {"Description": "", "Title": "Conference Dinner", "Event": 7, "Start": "2013-07-06 18:30:00", "Duration": "3:30:00", "Id": 6, "Room Name": "Tasman Room"}, {"Description": "", "Title": "Conference Opening & Housekeeping", "Event": 2, "Start": "2013-07-07 09:00:00", "Duration": "0:15:00", "Id": 7, "Room Name": "Plenary Hall"}, {"Description": "", "Title": "Morning Tea", "Event": 4, "Start": "2013-07-07 10:00:00", "Duration": "0:20:00", "Id": 8, "Room Name": "Exhibition Foyer"}, {"Description": "", "Title": "Lunch", "Event": 5, "Start": "2013-07-07 12:00:00", "Duration": "1:00:00", "Id": 9, "Room Name": "Exhibition Foyer"}, {"Description": "", "Title": "Afternoon Tea", "Event": 6, "Start": "2013-07-07 14:50:00", "Duration": "0:20:00", "Id": 10, "Room Name": "Exhibition Foyer"}, {"Description": "", "Title": "Lightning Talks", "Event": 8, "Start": "2013-07-07 16:30:00", "Duration": "1:00:00", "Id": 11, "Room Name": "Plenary Hall"}, {"Description": "", "Title": "Conference Close", "Event": 3, "Start": "2013-07-07 17:30:00", "Duration": "0:20:00", "Id": 12, "Room Name": "Plenary Hall"}, {"Description": "Self taught in Python? Think you missed a bit? This 90 minutes will fix everything. From a really quick recap of the bare-bones essentials, you'll get a good grasp and the core of Python. Want to know more about classes, objects and more? This is for you. Also suitable for beginners who need a quick start.\r\n* Recap of the essentials\r\n* Understanding the object model\r\n* Everything you've ever wanted to know about dictionaries\r\n* Building on types\r\n* Creating your own types - Object Oriented Programming\r\n* Important elements from the Standard Library\r\nAnd lots of time for questions.", "Title": "Python 102 - a recap and a bit more.", "URL": "http://2013.pycon-au.org/schedule/30088/view_talk", "Event": 50, "Start": "2013-07-06 10:20:00", "Presenter_emails": "pacqa100@yahoo.com.au", "Presenters": "Peter Lovett", "Duration": "1:40:00", "Id": 13, "Room Name": "Tasman B"}, {"Description": "This is a tutorial on using the latest and most exciting tools in Python for scientific and engineering applications in 2013, with a focus on 'big data' applications. Using real-world data sets and a fully Python 3 environment, it will walk you through what's possible with modern tools like the machine-learning package scikit-learn, the image-processing package scikit-image, the Pandas toolkit for data analysis, and IPython-parallel. It will also review the upcoming generation of tools like Numba and Blaze.", "Title": "Modern scientific computing and big data analytics in Python", "URL": "http://2013.pycon-au.org/schedule/30079/view_talk", "Event": 45, "Start": "2013-07-07 10:20:00", "Presenter_emails": "ed@pythoncharmers.com", "Presenters": "Edward Schofield", "Duration": "1:40:00", "Id": 14, "Room Name": "Tasman B"}, {"Description": "This talk will be an in-depth review of the stages that most open source projects go though, and the decisions their maintainers face. Requests will be used as an example \u2014 lessons learned and best practices will be covered.", "Title": "Planting Open Source Seeds", "URL": "http://2013.pycon-au.org/schedule/30009/view_talk", "Event": 13, "Start": "2013-07-07 11:15:00", "Presenter_emails": "kenneth@heroku.com", "Presenters": "Kenneth Reitz", "Duration": "0:45:00", "Id": 15, "Room Name": "Plenary Hall"}, {"Description": "Have you ever wanted to write a game? This talk will give you all the stuff that you will need to make a game using the pygame game making library. Come to this talk so you don't make all the mistakes that I did.\r\nThis talk will cover all kinds of awesome things that your game will need like images, music, sound effects, drawing, and all the vital things you will need to know. And I will show you how to do it right!", "Title": "Making games in pygame", "URL": "http://2013.pycon-au.org/schedule/30025/view_talk", "Event": 19, "Start": "2013-07-07 11:15:00", "Presenter_emails": "kmouse@ymindustries.com", "Presenters": "Cody Lovett", "Duration": "0:45:00", "Id": 16, "Room Name": "Tasman A"}, {"Description": "Have you ever found yourself obsessively checking the UPS or FedEx tracking site to see if your package finally got delivered at your doorstep?  Or wondered when your contractor/gardener showed up to do their job?  Or if your neighbor came looking for you on an urgent matter while you were out?\r\n\r\nIn this talk, I will show you how you can relax and rely on your handy-dandy smartphone to let you know when these events happen along with video snippets of what happened and who showed up! ", "Title": "PiDoorbell - Instantaneous Video Notifications with Arduino & RaspberryPi", "URL": "http://2013.pycon-au.org/schedule/30018/view_talk", "Event": 16, "Start": "2013-07-07 10:20:00", "Presenter_emails": "rupa@codechix.org", "Presenters": "Rupa Dachere", "Duration": "0:45:00", "Id": 17, "Room Name": "Plenary Hall"}, {"Description": "We spent the first part of our careers developing products and managing software teams at IBM, Dell, and Texas Instruments. After moving to Singapore, we each found are way into the education space and found ourselves teaching Python to a variety of audiences. We developed our first Python game for a friend of ours who was teaching computer science in a local high school. Since then, it has been a continual journey to see how fun we could make learning python before our now 10-year old daughter was ready to pickup the keyboard and start helping out. In this talk, we will talk about where our journey started, where we are today, and where we hope to be in the near future. We will discuss the Tournament-based Teaching methodology that we developed to increase student preparation, in-class engagement, and peer-based learning. Then we will talk about our research in to using mobile devices such as the iPad to help students practice reading and working with python to gain confidence before moving on to writing code. We will discuss our latest family project where we have worked with our children to create a fun python quest to encourage learners around the world to practice their python for just a few minutes more each week. Then looking forward, we will talk about our latest research in to pair-based programming assignments, pair-programming tournaments, team-based logic competitions, encouraging more girls to try programming, and the goal to frame programming as a very healthy habit. Our hope is that this talk will be interesting for educators looking to increase student engagement and interest, for managers looking for fun ways to increase the productivity of their development teams, and for parents looking for additional ways to enable their children to experiment with python.", "Title": "Making Python More Fun for Everyone", "URL": "http://2013.pycon-au.org/schedule/30036/view_talk", "Event": 24, "Start": "2013-07-07 10:20:00", "Presenter_emails": "cboesch@smu.edu.sg", "Presenters": "Chris Boesch", "Duration": "0:45:00", "Id": 18, "Room Name": "Tasman A"}, {"Description": "These are interesting times for the Python packaging ecosystem, with the Python Packaging Authority (creators of the popular pip and virtualenv tools) emerging as the umbrella brand for a suite of related tools that will bring support for updated packaging standards to both the upcoming Python 3.4 and to existing versions of Python.\r\n\r\nThis talk will cover some of the history of Python's packaging tools and systems, where we are now, and where we aim to go in the future.", "Title": "Nobody Expects the Python Packaging Authority", "URL": "http://2013.pycon-au.org/schedule/30030/view_talk", "Event": 22, "Start": "2013-07-06 10:20:00", "Presenter_emails": "ncoghlan@gmail.com", "Presenters": "Nick Coghlan", "Duration": "0:45:00", "Id": 19, "Room Name": "Plenary Hall"}, {"Description": "Social app development challenges us to code for users\u2019 personal world. Users are giving push-back to ill-fitted assumptions about their own identity \u2014 name, gender, sexual orientation, important relationships, and many other attributes that are individually meaningful.\r\n\r\nHow can we balance users\u2019 realities with an app\u2019s business requirements?\r\n\r\nFacebook, Google+, and others are struggling with these questions. Resilient approaches arise from an app\u2019s own foundation. Discover how our earliest choices influence codebase, UX, and development itself. Learn how we can use that knowledge to both inspire the people who use our apps, and to generate the data that need as developers.", "Title": "Schemas for the Real World", "URL": "http://2013.pycon-au.org/schedule/30085/view_talk", "Event": 48, "Start": "2013-07-06 10:20:00", "Presenter_emails": "cczona@gmail.com", "Presenters": "Carina C. Zona", "Duration": "0:45:00", "Id": 20, "Room Name": "Tasman A"}, {"Description": "The web is a scary place, and building secure web applications is difficult. Luckily, you've got Python! The Python web community tends to take security seriously, so most popular Python web frameworks have defenses available. This talk looks at the list of the top 10 security vulnerabilities, as ranked by The Open Web Application Security Project (OWASP). We'll talk about what each attack is, and look at how to defend against them using three popular Python web frameworks -- Django, Pyramid, and Flask.", "Title": "Building secure web apps: Python vs the OWASP Top 10", "URL": "http://2013.pycon-au.org/schedule/30081/view_talk", "Event": 46, "Start": "2013-07-06 11:15:00", "Presenter_emails": "jacob@jacobian.org", "Presenters": "Jacob Kaplan-Moss", "Duration": "0:45:00", "Id": 21, "Room Name": "Plenary Hall"}, {"Description": "In the immortal words of that modern day philosopher Homer Jay Simpson: \"Can't Someone Else Do It?\"                                                     \r\n                                                                                \r\nIf you're too lazy to configure your own servers: let Salt do it for you. Salt is an open source configuration management tool like Chef or Puppet but written in Python using ZeroMQ.                                                 \r\n                                                                                \r\nIf you're too lazy to login to your servers to run commands: let Salt do it for you. Salt is also a remote execution system. A single command run from the \"master\" salt server can call tens, hundreds, or  \r\nthousands of remote servers.                                                    \r\n                                                                                \r\nAnd if you're too lazy to install both an OS and Salt itself: let Salt do it for you. Salt Cloud can spin up new boxes for you in the cloud, install Salt on them, and introduce them to the \"master\" salt server.                                 \r\n                                                                                \r\nSalty vagrants, masters, minions, states, pillars, grains, salt clouds, parallel execution: I'll attempt to touch on them all in this talk.             \r\n                                                                                \r\nYou can also be expected to be \"assaulted\" with a barrage of terrible salt themed puns.", "Title": "Salt: How to be Truly Lazy", "URL": "http://2013.pycon-au.org/schedule/30044/view_talk", "Event": 30, "Start": "2013-07-06 11:15:00", "Presenter_emails": "lex.hider@gmail.com", "Presenters": "Lex Hider", "Duration": "0:45:00", "Id": 22, "Room Name": "Tasman A"}, {"Description": "A good suite of tests is a programmer's best friend. But a poorly designed testing strategy can result in tests that are unwieldy, fragile, and above all no fun to write or maintain.\r\n\r\nThis talk will offer a smorgasbord of testing ideas, ranging from simple tips and tricks to fully-fledged testing frameworks for Python. We will touch on automation, table-based testing, round-trip testing, UI testing, property checking, testing Twisted Python applications, and more. Be prepared to think outside the box, as we will see that testing is an area where creativity and pragmatism pay off better than following a rigid set of rules.\r\n\r\nEveryone should come away with a few new ideas, and renewed enthusiasm for test-driven development!", "Title": "Testing: Choose Your Weapons", "URL": "http://2013.pycon-au.org/schedule/30043/view_talk", "Event": 29, "Start": "2013-07-06 13:00:00", "Presenter_emails": "todd.m.owen@gmail.com", "Presenters": "Todd Owen", "Duration": "0:30:00", "Id": 23, "Room Name": "Plenary Hall"}, {"Description": "Tools such as numpy and scipy are the numerical workhorses of the modern python numerical \"hacker\". Particularly, numpy vectorization is a saviour when it comes to speeding up certain types of code without resorting to \"plugging in\" optimized code from other languages (c, c++).\r\n\r\nUnfortunately vectorization doesn't always lead to huge performance gains and for this reason the python community is looking to other tools to (easily) speed up slow numerical code. This talk focuses on alternatives to vectorization with a practical comparison of Cython and Numba based code, which are gaining in popularity and use.\r\n\r\nThe problem that we will be focusing upon is digital image segmentation, where we will attempt to segment foreground and background objects from scenes from digital photos.\r\n\r\nThe talk will follow this format:\r\n\r\n   1) Describe a basic image segmentation algorithm.\r\n   2) Demonstrate a pure python implementation.\r\n   3) Compare a numpy \"vectorized\" version.\r\n   4) Discuss optimized Cython and Numba versions.\r\n   5) Evaluate the pros/cons of all approaches.\r\n\r\nHopefully the audience will walk away with a basic understanding of what Cython and Numba can provide as optimization tools and learn a little about image segmentation.\r\n", "Title": "How to turn the image processing wheel faster using Cython and Numba.", "URL": "http://2013.pycon-au.org/schedule/30027/view_talk", "Event": 20, "Start": "2013-07-06 13:00:00", "Presenter_emails": "nathan.faggian@gmail.com", "Presenters": "Nathan Faggian", "Duration": "0:30:00", "Id": 24, "Room Name": "Tasman A"}, {"Description": "One of the first things you learn in programming is to apply a series of instructions to a set of elements.\r\n\r\nGiven it's ubiquitous nature and given the culture of python to simplify such tasks, decades of development and thought has gone into making this as convenient as possible for all possible use cases. While the functional ways of iterating like map, reduce and filter exist, list-comprehensions and the functions in itertools module enable several pythonic imperative alternatives that cover a gamut of possible use cases.\r\n\r\nThis talk is an interactive exercise using iPython notebook to cover many of these use cases to enable better iteration including writing of your own iterators and generators and when you would want to do such a thing.", "Title": "Pythonic iterators and generators", "URL": "http://2013.pycon-au.org/schedule/30086/view_talk", "Event": 49, "Start": "2013-07-06 13:00:00", "Presenter_emails": "lakshman@lakshmanprasad.com", "Presenters": "Lakshman  Prasad", "Duration": "0:30:00", "Id": 25, "Room Name": "Tasman B"}, {"Description": "The connection between sub-second web application performance and revenue is becoming more and more apparent with established companies regularly reporting the benefits of reducing page load times.\r\n\r\nThis talk will cover:\r\n* Designing for performance\r\n* Approaches to instrumenting and measuring application performance\r\n* Areas of focus for both front-end and back-end improvement\r\n* Techniques, tools and modules available in Django-land for improving performance\r\n* New and emerging technologies, for example SPDY protocol and Django 1.5's StreamingHttpResponse", "Title": "The life of a web request - techniques for measuring and improving Django application performance", "URL": "http://2013.pycon-au.org/schedule/30053/view_talk", "Event": 34, "Start": "2013-07-06 13:40:00", "Presenter_emails": "roger@mindsocket.com.au", "Presenters": "Roger Barnes", "Duration": "0:30:00", "Id": 26, "Room Name": "Plenary Hall"}, {"Description": "The scikit-learn library is a rapidly growing open source toolkit for machine learning in python. It allows for practitioners and researchers to apply machine learning in a variety of applications and is used by companies worldwide. Developed by programmers from around the world, the project has a large (and increasing) number of machine learning algorithms, a very useful set of utility functions and has also spawned a set of detailed tutorials. Written in python with the aid of numpy, scipy and cython, this library is featured, fast and extensible.\r\n\r\nIn this talk, I will introduce scikit-learn, giving an overview of the library, its features and how to use it for a number of different applications. Next talk about some of the tutorials that are actively being developed for learning machine learning and scikit-learn and also how to contribute. Through this, I'll introduce some key machine learning concepts and how you can apply them to a variety of tasks. The focus will be on practical uses, rather than theoretical advances.\r\n\r\nTo end the presentation, I'll briefly overview the research I perform at the Internet Commerce Security Laboratory (University of Ballarat) in cybercrime attribution, where I work with our industry partners to disrupt cybercrime. While it can be very difficult to do direct network based attribution, indirect methods through criminal profiling may assist in stopping crimes such as phishing or online fraud. I'll walk through some of our results in identifying the size and scope of the operations behind some of these attacks.", "Title": "scikit-learn, machine learning and cybercrime attribution", "URL": "http://2013.pycon-au.org/schedule/30019/view_talk", "Event": 17, "Start": "2013-07-06 13:40:00", "Presenter_emails": "robertlayton@gmail.com", "Presenters": "Robert Layton", "Duration": "0:30:00", "Id": 27, "Room Name": "Tasman A"}, {"Description": "This introductory tutorial will teach you how to effectively use modules and packages so your code is easier to read, test, package, deploy, reuse and maintain.\r\n\r\nWe will cover the basics of structuring your code with modules and packages, ways of using the import statement, how to document modules and packages, and a number of tips to ensure your code is less likely to end up a tangled mess that collapses when you need to modify or extend it.\r\n\r\nThis talk is compatible with Python 2 and 3.\r\n", "Title": "Modules 101: how to avoid spaghetti, big balls of mud and houses of straw!", "URL": "http://2013.pycon-au.org/schedule/30090/view_talk", "Event": 66, "Start": "2013-07-06 13:40:00", "Presenter_emails": "graeme.cross@planetinnovation.com.au", "Presenters": "Graeme Cross", "Duration": "0:30:00", "Id": 28, "Room Name": "Tasman B"}, {"Description": "So you've built an awesome webapp, put it through its paces, and assured yourself that it does what it's supposed to do.  Great!  Now how does it behave when things start to go wrong?\r\n\r\nThis talk will demonstrate how the Mozilla Services team tests for failure scenarios in our web services, focusing on two key python-based tools:  Marteau, a web-based frontend for easily running load-tests and analyzing the results, and Vaurien, a misbehaving TCP proxy that can simulate a variety of backend failure modes.\r\n\r\nUsed together, these tools can help ensure that a web service will not only scale up to meet its expected demand, but will fail gracefully when it finally reaches breaking point.\r\n", "Title": "Testing for Graceful Failure with Vaurien and Marteau", "URL": "http://2013.pycon-au.org/schedule/30056/view_talk", "Event": 35, "Start": "2013-07-06 14:20:00", "Presenter_emails": "ryan@rfk.id.au", "Presenters": "Ryan Kelly", "Duration": "0:30:00", "Id": 29, "Room Name": "Plenary Hall"}, {"Description": "A guide to metaprogramming & magic methods -- we will look at practical examples from open source software, understand common patterns and learn to yield such powerful constructs to our advantage, instead of fearing them. ", "Title": "Learning Parseltongue: Wizardry in Python", "URL": "http://2013.pycon-au.org/schedule/30038/view_talk", "Event": 26, "Start": "2013-07-06 14:20:00", "Presenter_emails": "gaurav@dadhania.in", "Presenters": "Gaurav Dadhania", "Duration": "0:30:00", "Id": 30, "Room Name": "Tasman A"}, {"Description": "Scientists are required to do more and more programming these days,  however they are almost always self-taught. They spend a large percentage of their time wrestling with software, reinvent a lot of wheels, and still don\u2019t know if their results are reliable. For proficient software developers, particularly those employed to assist these scientists, this computational illiteracy is easy to identify, but much harder to remedy. What do you teach a scientist, given their time constraints, background knowledge and work requirements? This presentation will give an answer to that question, by describing what gets taught at a Software Carpentry boot camp.\r\n\r\nSoftware Carpentry is a volunteer organisation that has been teaching basic software development to scientists for over a decade. Supported by the Sloan Foundation and Mozilla, Software Carpentry has refined its teaching methods over time and has recently settled on a model centred around the delivery of intensive short courses known as \u201cboot camps\u201d. Institutions such as Oxford University, MIT, University of California Berkeley and the International Centre for Theoretical Physics have all hosted boot camps in the past 12 months.     \r\n\r\nDr. Greg Wilson, the founder of Software Carpentry, flew out to Australia in February 2013 to host a series of two day boot camps with the Genes to Geoscience Research Centre in Sydney and the Australian Meteorological and Oceanographic Society (AMOS) and ARC Centre for Excellence in Climate System Science in Melbourne. These two events were the first ever boot camps held outside of North America and Europe, were booked out in a matter of days, and received rave reviews from participants. Given this success, there are already plans afoot to host a pair of boot camps for the bioinformatics community in Brisbane and Adelaide later this year, plus another for the weather/climate community in Hobart. \r\n\r\nThis presentation will describe what gets taught at a Software Carpentry boot camp (hint: there's lots of Python), how it's taught and why it's so effective (hint: we take an evidence-based approach to teaching). All Software Carpentry teaching materials can be freely re-used under open access licenses, so at the conclusion of the talk you can take anything you've learned and apply it to your own work and/or teaching. Better still, you'll find out how to join the Australian Software Carpentry team, so that you can organise and/or teach a boot camp for your own discipline.        ", "Title": "Software Carpentry arrives Down Under!", "URL": "http://2013.pycon-au.org/schedule/30012/view_talk", "Event": 14, "Start": "2013-07-06 14:20:00", "Presenter_emails": "d.irving@student.unimelb.edu.au", "Presenters": "Damien Irving", "Duration": "0:30:00", "Id": 31, "Room Name": "Tasman B"}, {"Description": "Starting with 13.5 million tweets from 2011 containing the word science: How I\u2019ve explored the way people use \u2018science\u2019 on Twitter. The IPython notebook (http://ipython.org/notebook.html) is a great tool for research, allowing me to keep notes about my research interleaved with the python code. In addition, the Pandas python data analysis library (http://pandas.pydata.org/) supports working with large data tables with excellent support for time series data.", "Title": "Exploring Science on Twitter with IPython Notebook and Python Pandas", "URL": "http://2013.pycon-au.org/schedule/30059/view_talk", "Event": 39, "Start": "2013-07-06 15:10:00", "Presenter_emails": "brenda@moon.net.au", "Presenters": "Brenda Moon", "Duration": "0:30:00", "Id": 32, "Room Name": "Plenary Hall"}, {"Description": "Have you tried unit testing? Always meant to add tests to your project but didn't know where to start? This presentation will provide a gentle introduction to unit testing your module, package or entire project.\r\n\r\nThe standard library comes with the unit test module but a great alternative is py.test. Py.test makes starting to test your project as easy as possible. When you need them it has a full set of tools and testing capabilities. \r\n\r\nThis presentation will provide an overview of unit testing and then show how easy it is to get started using py.test.", "Title": "Why I use py.test and maybe you should too", "URL": "http://2013.pycon-au.org/schedule/30024/view_talk", "Event": 10, "Start": "2013-07-06 15:10:00", "Presenter_emails": "andy47@halfcooked.com", "Presenters": "Andy Todd", "Duration": "0:30:00", "Id": 33, "Room Name": "Tasman A"}, {"Description": "This talk explores the challenges of ensuring responsiveness of applications under varying conditions like suddenly increased load, code regressions and problematic user data that reveal code paths with unusually high time complexity.\r\n\r\nI'll be looking at interrupt-driven techniques to help bring the 95 percentile of the response times of your application closer to the (usually much lower) mean.\r\n\r\nIn this talk, we'll go beyond traditional tricks like caching, sharding and data denormalization and instead look at tools that can interrupt execution of overly expensive code paths, such that you can guarantee an upper bound in response time.\r\n\r\nInterruptingcow and django-timelimit will be some of the tools that will be covered in this talk.\r\n\r\nThe context for most of this is web applications, and I'll be drawing many examples from our ongoing experiences with running and scaling Bitbucket, which is entirely written in Python.\r\n\r\nHaving said that though, many of the tools and techniques demonstrates will apply just as well to other types of applications and situations.\r\n", "Title": "Limiting Execution Time Through Interrupt Driven Programming", "URL": "http://2013.pycon-au.org/schedule/30061/view_talk", "Event": 41, "Start": "2013-07-06 15:10:00", "Presenter_emails": "erik.van.zijst@gmail.com", "Presenters": "Erik van Zijst", "Duration": "0:30:00", "Id": 34, "Room Name": "Tasman B"}, {"Description": "Cython is brilliant, it looks like Python but compiles to native C. It can be used as a simple way of writing lightning-fast C extensions for Python, or for a simple means of hooking into already-existing C libraries. If you are writing CPU intensive applications, like, say, hypothetically, cracking one-way cryptographic functions, Cython is a perfect mixture of simple expressiveness while making sure the 'inner loop' of your code is running as close to the bare metal as possible.\r\n \r\nAnd that's all this talk will be about, honest.\r\n\r\nWhy are you looking at me like that?", "Title": "Using Cython for distributed-multiprocess steganographic md5sum-collision generation. For... reasons.", "URL": "http://2013.pycon-au.org/schedule/30058/view_talk", "Event": 38, "Start": "2013-07-06 15:50:00", "Presenter_emails": "tom@eastman.net.nz", "Presenters": "Tom Eastman", "Duration": "0:30:00", "Id": 35, "Room Name": "Plenary Hall"}, {"Description": "You know that Python and Django is the way forward for your client, but with a mountain of legacy PHP code, where do you start?\r\n\r\nBen spent the last 3 years working with a thriving charity organisation to migrate their large PHP system to Django. He'd like to share some survival strategies.\r\n\r\nThis talk covers:\r\n\r\n - explaining the transition to your client\r\n - first steps and initial experiments\r\n - running PHP and Django in parallel\r\n - why incremental migration beats the \"big switch\"\r\n - sharing databases and authentication\r\n - making the experience seamless for visitors and staff\r\n - strategies for converting the code", "Title": "Transitioning from PHP to Django on the sly", "URL": "http://2013.pycon-au.org/schedule/30070/view_talk", "Event": 42, "Start": "2013-07-06 15:50:00", "Presenter_emails": "ben@sturm.com.au", "Presenters": "Ben Sturmfels", "Duration": "0:30:00", "Id": 36, "Room Name": "Tasman A"}, {"Description": "AutoNetkit is an open-source project to automatically build network configuration files for routers including Quagga, Cisco and Juniper, with complicated protocol configurations, all from a simple input graph --- which could even be drawn in a program such as yEd. \r\n\r\nAutoNetkit was started at the University of Adelaide, and developed further at Cisco, with collaborators from both research and industry.\r\nIt is being used at major router vendors, by network operators, and in university teaching, and in research publications including experiments with over 800 virtual routers --- nearly impossible to configure by hand.\r\n\r\n\r\nThis is all powered by Python, and we make significant use of the excellent packages available.\r\n\r\nThis talk will present a brief overview of what the AutoNetkit project is about and why we chose Python.\r\n\r\nI will give an over view of our data model, and how methods such as __lt__ __eq__ __contains__ __getattr__ __setattr__ and __iter__ allow elegant yet expressive network design, such as using list comprehensions.\r\n\r\nI will cover how we use the various modules, including:\r\n- NetworkX graphs\r\n- Netaddr IP addressing\r\n- Mako Templates\r\n- Exscript for scripting deployment\r\n- TextFSM parsing of measurement\r\n- Tornado to serve a browser-based d3.js visualisation framework\r\n- Using IPython notebooks for interactive tutorials\r\n\r\nWe've spent quite a bit of time with Python on this project. This talk will pass on the our favourite Python language features and package we've found along the way.\r\nIt will be both a case study in using Python for a large-scale project, and an overview of useful packages.", "Title": "Using Python to design, configure, and measure large-scale networks", "URL": "http://2013.pycon-au.org/schedule/30057/view_talk", "Event": 36, "Start": "2013-07-06 15:50:00", "Presenter_emails": "simon.knight@gmail.com", "Presenters": "Simon Knight", "Duration": "0:30:00", "Id": 37, "Room Name": "Tasman B"}, {"Description": "Classifying what type of job programmers do can be a challenge. Are we engineers? Are we scientists? Craftspeople? Something else entirely? Are software engineers, software developers, software architects, and programmers all really the same thing? This talk explores the nature of our work, and its relationship to the scientific method, including a dive into epistemology.", "Title": "Computer Science, Software Engineering, and the Scientific Method", "URL": "http://2013.pycon-au.org/schedule/30084/view_talk", "Event": 11, "Start": "2013-07-06 09:15:00", "Presenter_emails": "alex.gaynor@gmail.com", "Presenters": "Alex Gaynor", "Duration": "0:45:00", "Id": 38, "Room Name": "Plenary Hall"}, {"Description": "By using a variety of techniques and technologies, you can tap into the expert knowledge of others more effectively. Revision control and code reviews are great for software quality, but not everyone is going to work that way. Tools such as ipython notebook, sharing gists, demonstration sessions and screencasts are a great way to get others involved in problem solving. Knowing how to use these tools quickly and effectively can also be a great way to explain problems to management, or to walk them through a complex requirement.", "Title": "Solving problems by sharing them... with Python!", "URL": "http://2013.pycon-au.org/schedule/30022/view_talk", "Event": 18, "Start": "2013-07-07 09:15:00", "Presenter_emails": "tleeuwenburg@gmail.com", "Presenters": "Tennessee Leeuwenburg", "Duration": "0:45:00", "Id": 39, "Room Name": "Plenary Hall"}, {"Description": "In which Richard will tell you about some things you should never (probably ever) do to or in Python. Warranties may be voided.", "Title": "Don't Do This", "URL": "http://2013.pycon-au.org/schedule/30047/view_talk", "Event": 32, "Start": "2013-07-07 13:00:00", "Presenter_emails": "r1chardj0n3s@gmail.com", "Presenters": "Richard Jones", "Duration": "0:30:00", "Id": 42, "Room Name": "Plenary Hall"}, {"Description": "For when things should be pluggable... for when you want users to be able to extend your app... what should you do? \"I will write a framework!\", I hear you say. No need to invent your own pluggable system - use Component Architecture! The framework for frameworks (tested on animals).", "Title": "The Framework Framework", "URL": "http://2013.pycon-au.org/schedule/30073/view_talk", "Event": 44, "Start": "2013-07-07 13:00:00", "Presenter_emails": "arterrey@gmail.com", "Presenters": "Adam Terrey", "Duration": "0:30:00", "Id": 43, "Room Name": "Tasman A"}, {"Description": "With Andrew MacDonald and Daehyok Shin\r\n\r\nThe Australian Bureau of Meteorology provides water availability forecasts to the public and to key stakeholders at different time-scales across the nation. A number of the systems driving these forecasts make extensive use of Python. Python is used throughout the forecasting process - from data ingestion and management, to hydrological modelling and data analysis through to graphical product generation. A wide variety of packages are used heavily. These include NumPy, SciPy, Matplotlib, PyTables and Pandas. Such a suite of scientific computing packages for Python enables us to complete the development of fully automated systems quickly even with limited resources.\r\n\r\nThis presentation will give an overview of the systems used by the Bureau in the generation of water availability forecasts and highlight the wide variety of tasks and processes enabled by Python. In particular, we will introduce the Hydrologic Reference Stations (HRS) toolkit and the Water Availability Forecasts for Australian Rivers (WAFARi) system. The HRS toolkit analyses time-series of streamflow data and produces a huge number of products describing mean state, trends and variability in that data, which are released at http://bom.gov.au/water/hrs. WAFARi is used to generate probabilistic seasonal streamflow forecasts along with a suite of graphical products for each of those forecasts. The system is being used to update streamflow forecasts available at http://bom/gov.au/water/ssf every month.", "Title": "Using Python to drive Australian water availability forecasting", "URL": "http://2013.pycon-au.org/schedule/30060/view_talk", "Event": 40, "Start": "2013-07-07 13:00:00", "Presenter_emails": "d.kent@bom.gov.au", "Presenters": "David Kent", "Duration": "0:30:00", "Id": 44, "Room Name": "Tasman B"}, {"Description": "The IPython Notebook is a powerful web app for exploring ideas and data sets with Python. It has excellent integration with Matplotlib, giving the user highly customisable static plots with ease. But for larger data sets, a static plot may not be ideal - the ability to pan, zoom, choose dynamic layers and sample the data at particular points would be nice. This talk will demonstrate just how easy it is to integrate a Web Map Service/client such as Pydap/Leaflet.js into the IPython Notebook.", "Title": "Dynamic visualisation in the IPython Notebook", "URL": "http://2013.pycon-au.org/schedule/30041/view_talk", "Event": 28, "Start": "2013-07-07 13:40:00", "Presenter_emails": "brianna.laugher@gmail.com", "Presenters": "Brianna Laugher", "Duration": "0:30:00", "Id": 45, "Room Name": "Plenary Hall"}, {"Description": "Everyone knows that Testing is Good.  But what about testing your web applications, javascript and all?  Selenium is good but can be verbose and clunky.  Kill off test bloat and make your tests elegant and deadly, with Splinter.\r\n\r\nSplinter is a DSL for writing web app integration tests.  It wraps Selenium Webdriver or Zope Testdriver, supports Javascript and AJAX, supports css and xpath selectors and provides a clean, easily read API.\r\n\r\nIn this talk we'll look at installing, configuring and using Splinter.  We'll cover common tasks, selectors and executing javascript.  Suitable for those new to selenium and those who are frustrated by it, this talk aims to get you interested and remove one of the excuses for not testing more.", "Title": "Web testing for Ninjas with Splinter", "URL": "http://2013.pycon-au.org/schedule/30076/view_talk", "Event": 37, "Start": "2013-07-07 13:40:00", "Presenter_emails": "dylan@saucelabs.com", "Presenters": "Dylan Lacey", "Duration": "0:30:00", "Id": 46, "Room Name": "Tasman A"}, {"Description": "Brett covers the things that excite him about each of Python, Ruby and Go. He covers some of cool stuff he's seen lately, some of the lessons learned from different ecosystems, and more specifically where he thinks Python could improve, or what it excels at.", "Title": "Python? Ruby? Go? Oh My!", "URL": "http://2013.pycon-au.org/schedule/30007/view_talk", "Event": 12, "Start": "2013-07-07 13:40:00", "Presenter_emails": "brett@brett.geek.nz", "Presenters": "Brett Wilkins", "Duration": "0:30:00", "Id": 47, "Room Name": "Tasman B"}, {"Description": "Tkinter - the Python wrapper to the Tk graphics library - has been part of the Python standard library since very early on. However, that inclusion hasn't translated into extensive use.\r\n\r\nThere was a very good reason for this. Tk's documentation was beyond awful. And if you managed to get over that hurdle, Tkinter apps looked awful - they had a woefully inadequate set of widgets, styled with the very best of mid 1990's open source graphic skill.\r\n\r\nAnd then, the world got obsessed with web frameworks, and the desktop was declared as dead.\r\n\r\nHowever, in the last few years, many of the reasons Tkinter was ignored have been quietly fixed. Tk 8.4 massively improved the visual appearance of Tk. tkdocs.com has emerged, addressing many of the problems with Tk documentation.\r\n\r\nIn this talk, you'll get a re-introduction to an old friend, and an explanation of why, in a web and mobile world, you should care.\r\n", "Title": "Tinkering with Tkinter", "URL": "http://2013.pycon-au.org/schedule/30033/view_talk", "Event": 23, "Start": "2013-07-07 14:20:00", "Presenter_emails": "russell@keith-magee.com", "Presenters": "Russell Keith-Magee", "Duration": "0:30:00", "Id": 48, "Room Name": "Plenary Hall"}, {"Description": "Cloud computing is changing the way that businesses think about their computing requirements. Instead of ordering hardware, waiting for delivery, allocating space in a data center, installing and wiring it up, and then configuring each piece of the system, you can now do the equivalent with a few clicks on a control panel, but that gets tedious. What's much more interesting is to do all of this programmatically, using our favorite language: Python!\r\n\r\nThis session will deep-dive into this topic by using pyrax, the Python SDK for the OpenStack and Rackspace Clouds. It will cover the following:\r\n\r\n\u2022 Getting your cloud account and credentials\r\n\u2022 Installing pyrax\r\n\u2022 Creating servers\r\n\u2022 Saving a customized server as a template image\r\n\u2022 Creating more servers on demand from your template images.\r\n\u2022 Creating, attaching, and imaging Block Storage volumes.\r\n\u2022\u00a0Using private networks to create a bastion host setup\r\n\u2022 Managing these servers with a Load Balancer\r\n\u2022 Creating and managing Cloud Databases\r\n\u2022 Using pyrax to manage your DNS\r\n\u2022 Object storage and management using pyrax", "Title": "Build your infrastructure - with Python!", "URL": "http://2013.pycon-au.org/schedule/30028/view_talk", "Event": 21, "Start": "2013-07-07 14:20:00", "Presenter_emails": "ed.leafe@rackspace.com", "Presenters": "Ed Leafe", "Duration": "0:30:00", "Id": 49, "Room Name": "Tasman A"}, {"Description": "Andrew Rowe will present the lessons learnt and techniques used to process very large amounts of data from the ABS Census.  The Australian Bureau of Statistics used Python to investigate data from the 2006 Australian Census.  Python is an integral part of ABS systems to determine duplicated entries and link people in the Census to other ABS collections.  You will learn about:\r\n* Handling large data.\r\n* Dealing with confidentiality.\r\n* Multiprocessing techniques.\r\n* Performance tips and tricks.\r\n* Difference between if( 1 < 2 ) and if 1 < 2.", "Title": "Big Data Deduplication and data matching using Python", "URL": "http://2013.pycon-au.org/schedule/30045/view_talk", "Event": 31, "Start": "2013-07-07 14:20:00", "Presenter_emails": "andrew.rowe@abs.gov.au", "Presenters": "Andrew Rowe", "Duration": "0:30:00", "Id": 50, "Room Name": "Tasman B"}, {"Description": "Indie game developer Luke Miller presents a brief overview on making point-and-click adventure games using the open source pyvida gaming engine and uses his commercially released gay-themed adventure game \"My Ex-Boyfriend the Space Tyrant!\" as a tutorial on developing, packaging, releasing and selling a python game for Windows, Mac and Linux.", "Title": "My big gay adventure. Making, releasing and selling an indie game made in python.", "URL": "http://2013.pycon-au.org/schedule/30050/view_talk", "Event": 9, "Start": "2013-07-07 15:10:00", "Presenter_emails": "dodgyville@gmail.com", "Presenters": "Luke Miller", "Duration": "0:30:00", "Id": 51, "Room Name": "Plenary Hall"}, {"Description": "Is Django a CMS? Is Plone a Framework? For years I've seen developers stumble over the same problem, when should I use a CMS like Plone, Drupal or Wordpress, and when should I use a framework like Django? Covering real case studies of projects gone horribly wrong through the use of the wrong technology. The audience will be left with several solid rules to follow to guide their future development.", "Title": "The ultimate CMS vs Framework showdown", "URL": "http://2013.pycon-au.org/schedule/30072/view_talk", "Event": 43, "Start": "2013-07-07 15:10:00", "Presenter_emails": "djay@pretaweb.com", "Presenters": "Dylan Jay", "Duration": "0:30:00", "Id": 52, "Room Name": "Tasman A"}, {"Description": "Writing scientific software in support of experimentation and simulation is a challenging task. It is even more challenging in cases where such software must be distributed across multiple machines.  Existing methods for addressing this problem can require either significant effort to maintain and extend. Alternative approaches such as message queues can be incredibly difficult to install for novices.\r\n\r\nThis presentation will demonstrate a quick and easy approach to solving this problem using the redis-queue module.  This approach makes it easy to make efficient use of multiple cores and multiple machines, with only minimal dependence on external packages.", "Title": "Managing scientific simulations with Python with RQ (Redis Queue)", "URL": "http://2013.pycon-au.org/schedule/30037/view_talk", "Event": 25, "Start": "2013-07-07 15:10:00", "Presenter_emails": "walker.ab@gmail.com", "Presenters": "Andrew Walker", "Duration": "0:30:00", "Id": 53, "Room Name": "Tasman B"}, {"Description": "Stack Overflow is the single greatest repository of coding knowledge in the world. Now approaching five years old, its community-moderated, strict Q&A format has made it far more useful than other similar sites.\r\n\r\nContributing to it, however, can be intimidating. The questions of new users are often voted down or closed with little comment, or edited by the community in was the original poster doesn't understand. Answering is even worse. How do other people manage to post a detailed answer to a specific question in minutes, or even seconds? How could I possibly know so much about such a broad range of topics, even within a single programming language or framework?\r\n\r\nOver the past three years, I've learned a lot from contributing to Stack Overflow. It has honed my research, technical writing, and rapid prototyping skills, as well as greatly expanded my knowledge of the Python ecosystem, standard library, and CPython internals.\r\n\r\nI'll share not only how to use the site to learn, but also how to compete effectively with the thousands of other programmers who answer questions there on a daily basis -- we all like to win. I'll talk about what goes into a good answer, as well as a good question. I'll also talk about how contributing to Stack Overflow is like contributing to any other open source project in many ways -- in what you gain, as well as what the community gains, partly because of the CC-by-SA licensing used by the Stack Exchange network of sites.", "Title": "Getting the most out of Stack Overflow", "URL": "http://2013.pycon-au.org/schedule/30083/view_talk", "Event": 47, "Start": "2013-07-07 15:50:00", "Presenter_emails": "adam@adamforsyth.net", "Presenters": "Adam Forsyth", "Duration": "0:30:00", "Id": 54, "Room Name": "Plenary Hall"}, {"Description": "Reporting and analysis systems rely on coherent and reliable data, often from disparate sources. To that end, a series of well established data warehousing practices have emerged to extract data and produce a consistent data store.\r\n\r\nThis talk will look at some options for composing workflows using Python. In particular, we'll explore beyond Celery's asynchronous task processing functionality into its workflow (aka Canvas) system and how it can be used in conjunction with SQLAlchemy's architecture to provide the building blocks for data stream processing.\r\n", "Title": "Building data flows with Celery and SQLAlchemy", "URL": "http://2013.pycon-au.org/schedule/30051/view_talk", "Event": 33, "Start": "2013-07-07 15:50:00", "Presenter_emails": "roger@mindsocket.com.au", "Presenters": "Roger Barnes", "Duration": "0:30:00", "Id": 55, "Room Name": "Tasman A"}, {"Description": "A Continuous Integration (CI) server is an essential tool for any developer, but with so many different servers out there its hard to choose which one to use. Buildbot has a pretty steep learning curve, but rewards with a very light footprint and amazing flexibility and configurability. In this talk I will walk through the build(ing) blocks and concepts required to put together a simple CI server based upon buildbot, and also suggest some more advanced features.", "Title": "Buildbots Rollout!", "URL": "http://2013.pycon-au.org/schedule/30015/view_talk", "Event": 15, "Start": "2013-07-07 15:50:00", "Presenter_emails": "underplank@gmail.com", "Presenters": "Mark Lakewood", "Duration": "0:30:00", "Id": 56, "Room Name": "Tasman B"}, {"Description": "", "Title": "Morning Tea", "Event": 4, "Start": "2013-07-05 10:00:00", "Duration": "0:30:00", "Id": 59, "Room Name": "Portlight Bar"}, {"Description": "", "Title": "Lunch", "Event": 5, "Start": "2013-07-05 12:15:00", "Duration": "0:45:00", "Id": 66, "Room Name": "Portlight Bar"}, {"Description": "", "Title": "Afternoon Tea", "Event": 6, "Start": "2013-07-05 14:45:00", "Duration": "0:30:00", "Id": 67, "Room Name": "Portlight Bar"}, {"Description": "", "Title": "DjangoCon AU Opening", "Event": 60, "Start": "2013-07-05 09:00:00", "Duration": "0:10:00", "Id": 68, "Room Name": "Derwent 1"}, {"Description": "", "Title": "Keynote: A divided web, a review of the role of frameworks by Alex Gaynor", "Event": 63, "Start": "2013-07-05 09:10:00", "Duration": "0:50:00", "Id": 69, "Room Name": "Derwent 1"}, {"Description": "Django 1.5 now supports Python 3, so now's the time to start thinking about porting your apps and sites. Come see how! I'll talk about the porting techniques that work, and present two case studies: porting a site, and porting a reusable app.", "Title": "Porting Django apps to Python 3", "URL": "http://2013.pycon-au.org/schedule/30080/view_talk", "Event": 54, "Start": "2013-07-05 10:30:00", "Presenter_emails": "jacob@jacobian.org", "Presenters": "Jacob Kaplan-Moss", "Duration": "0:30:00", "Id": 70, "Room Name": "Derwent 1"}, {"Description": "Site editors often struggle with editing rich content and managing variations in layout in Django admin. By rich content we mean text, images, video, tables, and so on. Trying to squeeze all this content into a single rich-text editor is like trying to jam a magical pony into a dog kennel. A better approach is to use a rich content framework like FeinCMS. FeinCMS is a sensible, flexible framework which allows rich content of any shape to be manipulated within any Django model in your project.\r\n\r\nThis talk describes what FeinCMS does and how it works, and most importantly whether it should be pronounced to rhyme with \"Vein\" or \"Vine\". The talk is supported with working example code that shows the progression of a FeinCMS project through several levels of functionality, plus some real-world demonstrations of fully-developed functionality.\r\n\r\nA FeinCMS Document model is just like any Django model, except it has one or more 'templates'. Each 'template' has one or more regions, and each region is a place where an unlimited amount of rich content types can be added, removed or rearranged to form the content in that region. This is all wrapped up in a nifty lightweight Javascript interface for Django's admin, and a surprisingly simple implementation at the database level.\r\n\r\nThe types of content available in a given region is defined by a collection of abstract Django models (e.g. one model to represent a passage of text, another model to represent an image, and so on). Developers are free to define their own FeinCMS content types, using all the usual features of Django models.\r\n\r\nAt the HTML template level, each FeinCMS content item renders a standard template, and can optionally render different templates in different circumstances.\r\n\r\nThis flexibility allows Django developers to quickly design and build CMSes that match the content and layout perfectly, meaning happier content editors, fewer maintenance headaches and greater magical pony freedom.", "Title": "Unleash the ponies! Using FeinCMS to add content tools that users love to any Django model", "URL": "http://2013.pycon-au.org/schedule/30026/view_talk", "Event": 56, "Start": "2013-07-05 11:00:00", "Presenter_emails": "greg@interaction.net.au", "Presenters": "Greg Turner", "Duration": "0:45:00", "Id": 71, "Room Name": "Derwent 1"}, {"Description": "Django ship with a wide range of tools to help you test your web application, but some of the best tools for testing Django don't come in the box.\r\n\r\nIn this talk, you'll get a brief introduction to two of those tools - Mock and Factory Boy - showing when they should be used, and some practical examples of their usage in a Django test suite.\r\n", "Title": "Secrets of the testing masters", "URL": "http://2013.pycon-au.org/schedule/30034/view_talk", "Event": 57, "Start": "2013-07-05 11:45:00", "Presenter_emails": "russell@keith-magee.com", "Presenters": "Russell Keith-Magee", "Duration": "0:30:00", "Id": 72, "Room Name": "Derwent 1"}, {"Description": "A compilation of outstanding tips, tricks and tools for meeting perfectionist's deadlines with even greater elegance and efficiency. Topics include project structure tips, time-saving template tags, handy model mixin classes, admin ninja skills, testing tools, robust handling of dynamic hyperlinks within rich text content, replacing raw ID widgets with client-friendly ones, convenient view and model method decorators, novel ways of keeping DRY, harnessing inheritance in CBVs, and as much more as I can fit into my time allocation.", "Title": "Django Unstrained", "URL": "http://2013.pycon-au.org/schedule/30029/view_talk", "Event": 55, "Start": "2013-07-05 13:00:00", "Presenter_emails": "simon@simonmeers.com", "Presenters": "Simon Meers", "Duration": "0:30:00", "Id": 73, "Room Name": "Derwent 1"}, {"Description": "There are few feelings more sweet than being a web-app backend developer, and knowing that the vaguaries and frustrations of front-end design, Javascript inconsistencies, and web-browser quirks are \"Someone Else's Problem\". \r\n\r\nThe backend developer, instead, has just three goals: Make the system lightning fast and infinitely scalable; ensure its absolute security and impregnability; and guarantee its absolute correctness, stability, and general perfection in the face of all input at all times.\r\n\r\nI'll take that over having to debug CSS rendering quirks any day of the week.\r\n\r\nIn this talk I'll cover these three goals and how Django helps make each one achievable, including a tour of some of the lesser known features of the framework, such as:\r\n\r\n - Magic tricks you can do with Django's caching framework beyond the naive \"cache this page\", and its ability to take advantage of the browser's own cache in marvellous ways.\r\n - Taking Django's testing framework to its logical (and illogical) extremes. Including clever uses of selenium and webdriver to run unit tests, integration tests and even Javascript tests.\r\n - Considerations of Django use and web security. Including the sorts of things Django does a great job of protecting you from, and the things where your own due dilligence will always be required.", "Title": "The Server Side: The coolest parts of backend development with Django", "URL": "http://2013.pycon-au.org/schedule/30055/view_talk", "Event": 58, "Start": "2013-07-05 13:30:00", "Presenter_emails": "tom@eastman.net.nz", "Presenters": "Tom Eastman", "Duration": "0:45:00", "Id": 74, "Room Name": "Derwent 1"}, {"Description": "In the Django world there are currently two major REST API libraries, with a new one starting to take hold.\r\n\r\nBut how do you choose?\r\n\r\nIn this talk I plan to give details on how these three apps (TastyPie, Django REST Framework, and django-nap) differ, as well as overlap.", "Title": "A state of REST.", "URL": "http://2013.pycon-au.org/schedule/30094/view_talk", "Event": 67, "Start": "2013-07-05 14:15:00", "Presenter_emails": "curtis@commoncode.com.au", "Presenters": "Curtis Maloney", "Duration": "0:30:00", "Id": 75, "Room Name": "Derwent 1"}, {"Description": "", "Title": "Core Developer Panel", "Event": 64, "Start": "2013-07-05 15:15:00", "Duration": "0:45:00", "Id": 76, "Room Name": "Derwent 1"}, {"Description": "", "Title": "Keynote: The myth of goldilocks and the three frameworks, Pyramid, Django and Plone by Dylan Jay", "Event": 65, "Start": "2013-07-05 16:00:00", "Duration": "0:50:00", "Id": 77, "Room Name": "Derwent 1"}, {"Description": "", "Title": "DjangoCon AU Lightning Talks", "Event": 62, "Start": "2013-07-05 16:50:00", "Duration": "0:40:00", "Id": 78, "Room Name": "Derwent 1"}, {"Description": "", "Title": "DjangoCon AU Closing", "Event": 61, "Start": "2013-07-05 17:30:00", "Duration": "0:15:00", "Id": 79, "Room Name": "Derwent 1"}, {"Description": "", "Title": "Registration", "Event": 59, "Start": "2013-07-05 08:00:00", "Duration": "1:00:00", "Id": 80, "Room Name": "Derwent Registration Desk"}, {"Description": "", "Title": "Registration", "Event": 59, "Start": "2013-07-06 08:00:00", "Duration": "1:00:00", "Id": 81, "Room Name": "Exhibition Foyer"}, {"Description": "", "Title": "PyLadies Breakfast presented by Google", "Event": 68, "Start": "2013-07-07 08:00:00", "Duration": "1:00:00", "Id": 82, "Room Name": "Pier One Restaurant"}, {"Description": "", "Title": "OpenStack Miniconf Opening", "Event": 75, "Start": "2013-07-05 09:00:00", "Duration": "0:15:00", "Id": 83, "Room Name": "Derwent 3"}, {"Description": "", "Title": "WTF is OpenStack by Tim Serong", "Event": 69, "Start": "2013-07-05 09:15:00", "Duration": "0:30:00", "Id": 84, "Room Name": "Derwent 3"}, {"Description": "", "Title": "Hack Session Setup and Overview", "Event": 76, "Start": "2013-07-05 09:45:00", "Duration": "0:15:00", "Id": 85, "Room Name": "Derwent 3"}, {"Description": "", "Title": "Deploying OpenStack using OpenStack by Robert Collins", "Event": 70, "Start": "2013-07-05 10:30:00", "Duration": "0:45:00", "Id": 86, "Room Name": "Derwent 3"}, {"Description": "", "Title": "Nova v3 API by Christopher Yeoh", "Event": 72, "Start": "2013-07-05 11:15:00", "Duration": "1:00:00", "Id": 88, "Room Name": "Derwent 3"}, {"Description": "", "Title": "Testtools and Test Repository - the Python test frameworks OpenStack uses by Robert Collins", "Event": 74, "Start": "2013-07-05 13:00:00", "Duration": "0:30:00", "Id": 89, "Room Name": "Derwent 3"}, {"Description": "", "Title": "Getting Started with OpenStack Development", "Event": 80, "Start": "2013-07-05 14:00:00", "Duration": "0:30:00", "Id": 90, "Room Name": "Derwent 3"}, {"Description": "", "Title": "Introduction to OpenStack Hackfest", "Event": 77, "Start": "2013-07-05 14:30:00", "Duration": "0:15:00", "Id": 91, "Room Name": "Derwent 3"}, {"Description": "", "Title": "OpenStack Hackfest", "Event": 78, "Start": "2013-07-05 15:15:00", "Duration": "2:25:00", "Id": 92, "Room Name": "Derwent 3"}, {"Description": "", "Title": "OpenStack Miniconf Close", "Event": 79, "Start": "2013-07-05 17:40:00", "Duration": "0:05:00", "Id": 93, "Room Name": "Derwent 3"}]