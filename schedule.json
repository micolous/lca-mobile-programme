{"Lincoln": [{"exclusive": false, "end": "2015-07-31 09:05:00", "title": "OpenStack Miniconf Opening: Joshua Hesketh & Robert Collins", "event_id": 9, "abstract": "", "start": "2015-07-31 09:00:00", "schedule_id": 6, "duration": "0:05:00"}, {"exclusive": false, "end": "2015-08-01 11:40:00", "title": "Why Salt?", "event_id": 46, "abstract": "DevOps is a growing movement in the tech community, and configuration management is a huge necessity for doing DevOps well.\r\nIn this talk, we'll be talking about why you should use the SaltStack configuration management platform in your environment, versus the other major platforms of Puppet and Chef.", "start": "2015-08-01 11:10:00", "schedule_id": 50, "url": "http://2015.pycon-au.org/schedule/30086/view_talk", "duration": "0:30:00", "presenters": "aurynn shaw"}, {"exclusive": false, "end": "2015-08-01 13:40:00", "title": "Docker + Python", "event_id": 70, "abstract": "Docker is an open platform for developers and sysadmins to build, ship, and run distributed applications. This allows for rapidly deployable apps, which will run on any docker environment with the ability to rapidly scale.\r\n\r\nAs Docker is based on Linux containers, these are very lightweight and allow resource isolation. With added tools to provide workflow automation and image management, Docker can provide a complete toolset to manage your application environment.\r\n\r\nAimed at newcomers to the technology, this talk will cover the basics of what Docker is, how it compares to other technologies and with why it's useful for Python applications. There will be practical demos and examples of real world Python deployments included.", "start": "2015-08-01 13:10:00", "schedule_id": 57, "url": "http://2015.pycon-au.org/schedule/30036/view_talk", "duration": "0:30:00", "presenters": "Tim Butler"}, {"exclusive": false, "end": "2015-08-01 15:00:00", "title": "Is Python ready for the Enterprise?", "event_id": 72, "abstract": "There seems to be an opinion among some developers that Python isn't suitable for Enterprise. To put it another way, Python is great for small tasks where a scripting language works well, but not so suitable for more complicated software stacks. This talk tries to address some of these concerns. Specifically, we will look at:\r\n\r\n* Python Typing System for large code bases.\r\n* Is the GIL a problem?\r\n* The speed of Python execution.\r\n* The speed of Python development.\r\n* A case study: Caterpillar.", "start": "2015-08-01 14:30:00", "schedule_id": 65, "url": "http://2015.pycon-au.org/schedule/30042/view_talk", "duration": "0:30:00", "presenters": "Ryan Stuart"}, {"exclusive": false, "end": "2015-08-01 16:00:00", "title": "Cooking with Cryptography", "event_id": 77, "abstract": "The ``cryptography`` library emerged in 2014 with the goal of\r\nbecoming Python's \"cryptographic standard library\".  It is designed\r\nto be easy to use but flexible, exposing a *recipes* layer for\r\ncommon use cases, and a *hazmat* layer that provides crypto\r\nprimitives but demands users know what they're doing in order to use\r\nthem properly.\r\n\r\nThis talk will explain the motivations and goals of the\r\n``cryptography`` library, take a tour of its features and discuss\r\nits implementation.  ``cryptography`` will be compared to some other\r\npopular and emerging crypto libraries.  Finally, we will examine\r\nsome real-world use of the library.\r\n\r\nAudience members should have a passing familiarity with cryptography\r\n(e.g. know the differences between hashing and encryption, or public\r\nkey and private key crypto) to get the most out of this talk.", "start": "2015-08-01 15:30:00", "schedule_id": 69, "url": "http://2015.pycon-au.org/schedule/30059/view_talk", "duration": "0:30:00", "presenters": "Fraser Tweedale"}, {"exclusive": false, "end": "2015-08-01 16:40:00", "title": "Four* non-cryptographic hash functions enter. One leaves.", "event_id": 44, "abstract": "When you say \u201chash function\u201d in a room full of Python developers, people tend to think of the classics you get in hashlib: MD5, SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-OHGODPLEASESTOP, and the like \u2014 cryptographic hash functions intended for cryptographic uses.\r\n\r\nThere\u2019s another world out there, though: non-cryptographic hashes. Sometimes you just need to figure out if you\u2019ve already seen a string or structure. Sometimes you need a basic checksum. Sometimes you need a hash that\u2019s just fast and can fit into a 32 bit integer.\r\n\r\nI\u2019ll run through the state of the art in the world of non-cryptographic hashing \u2014 what your best options are, how they compare in terms of CPU and memory usage, and how they work. Who takes it? Whose mixing function reigns supreme?\r\n\r\nLet\u2019s find out.\r\n\r\n* I\u2019m saying \u201cfour\u201d, but realistically I\u2019m going to cover as many modern options as I can fit into the time available. Let\u2019s say \u201cfour plus two or minus one\u201d in reality.", "start": "2015-08-01 16:10:00", "schedule_id": 72, "url": "http://2015.pycon-au.org/schedule/30080/view_talk", "duration": "0:30:00", "presenters": "Adam Harvey"}, {"exclusive": false, "end": "2015-08-02 11:00:00", "title": "Are they ready? A quick review of graph databases and Python", "event_id": 81, "abstract": "Graph databases store, retrieve and process data that takes the form of a graph: a network of nodes and the relationships between them. As one of the fastest growing database models over the past two years, they promise a number of fantastic outcomes including increased performance, faster development, and cleaner code. Vendors also boast of large corporate deployments throughout the US and Europe. \r\n\r\nSo, are graph databases as good as they sound? How can we use them with Python? \r\n\r\nThis talk will review a couple of the most popular graph databases including Neo4J, Titan and OrientDB.   The focus will be on interacting with each database as Pythonically as possible \u2013 using Python APIs as much as possible. Along the way it will give an idea of ease of use, speed, documentation quality and stability, as well as any other challenges or tricks that found along the way. It isn\u2019t a tutorial \u2013 there\u2019s not enough time, and those exist elsewhere \u2013 but instead more of an introduction to what is out there and what you can do with it. \r\n\r\nAt the end of the talk, you will have an idea of what it takes to get started with Graph Databases in Python, and also an idea of which toolset you want to use. You\u2019ll also have an idea of the sorts of problems which map well to graph databases, and which ones may be better suited to other storage and processing methods. \r\n\r\nYou won\u2019t need to have a background in graphs or even a lot of Python experience to get through this talk. However, it\u2019s always good to have a potential application in mind.\r\n", "start": "2015-08-02 10:30:00", "schedule_id": 76, "url": "http://2015.pycon-au.org/schedule/30074/view_talk", "duration": "0:30:00", "presenters": "Nic Crouch"}, {"exclusive": false, "end": "2015-08-02 11:40:00", "title": "Lrparsing, when regular expressions aren't enough", "event_id": 67, "abstract": "Lrparsing is a fast, well documented and tested parsing infrastructure for Python. Parsing infrastructures are used when the input to be parsed is too complex to be done by regular expressions alone. Parsing infrastructures are ideally suited to parsing programming languages and configuration files. Lrparsing is roughly equivalent to the combination of Flex and Bison, except completely implemented in Python, and is thus very Pythonic.\r\n\r\nThe rest of the abstract uses the following Python snippet as an example:\r\n\r\n1 if option else 2\r\n\r\nlrparsing provides both a lexer (which breaks the input down into tokens, e.g.:\r\n\r\n ['1', 'if' , 'option',  'else', '2']\r\n\r\nand a parser generator, which produces a concrete parse tree:\r\n\r\n(<ternary>, (<bool>, 'option'), (<expr>, '1')), (<expr>, '2')))\r\n\r\n Lrparsing provides Pythonic syntax support to easily construct parsers for programming languages, Domain Specific Languages and configuration file formats.\r\n\r\nLrparsing is very well suited to constructing Concrete Parse Trees but has little support for creating Abstract Syntax Trees (AST), which are much easier to use: My work has added Abstract Syntax Tree support to lrparsing, yielding exactly the same AST nodes that the Python AST module supports:\r\n\r\nIfExp(condition, 1, 2)\r\n\r\nThis talk will give an overview of the major features of Lrparsing, then look at my work to add AST support. ", "start": "2015-08-02 11:10:00", "schedule_id": 81, "url": "http://2015.pycon-au.org/schedule/30019/view_talk", "duration": "0:30:00", "presenters": "Clinton Roy"}, {"exclusive": false, "end": "2015-08-02 12:20:00", "title": "Interactive visualization for the curious", "event_id": 89, "abstract": "The workhorse plotting tool in Python for most of this century has been Matplotlib. It is stable, powerful, and comprehensive. Its documentation spans over 2600 printed pages. It creates plots in 2d and 3d, saves them in myriad file formats, and runs with many windowing toolkits on several platforms. But they are (mostly) lifeless, and you can't interact with them over the web.\r\n\r\nMatplotlib is now being challenged by an upstart: Bokeh. Bokeh does vastly less, delegating all actual rendering of plots to a modern web browser. In exchange, it trades in static plots for in-browser interaction, offering many of the benefits of the amazing D3.js library and its brethren, without the need to write Javascript.\r\n\r\nThis talk will give a brief history of Python visualization tools (including Chaco), give shiny demos, and review Bokeh thoroughly vis-a-vis other libraries to help you decide whether, or when, to adopt it as your go-to visualization library. We will answer these questions: How does the performance compare? Would you need to rewrite all your plotting code? What would it take to integrate Bokeh with the current ecosystem of Python plotting libraries? What is on the horizon for the different projects? Where do the Jupyter project's interactive widgets fit into this picture?\r\n\r\nCome to hear a critical review about the past, present, and future of visualization in Python and the best ways to move beyond static plots.", "start": "2015-08-02 11:50:00", "schedule_id": 86, "url": "http://2015.pycon-au.org/schedule/30122/view_talk", "duration": "0:30:00", "presenters": "Edward Schofield"}, {"exclusive": false, "end": "2015-08-02 13:55:00", "title": "Just Use Postgres.", "event_id": 82, "abstract": "Making use of the latest database for your data is considered trendy and edgy, with vendors promising unrealistic expectations when it comes to capabilities of these systems. Furthermore, communities such as Hacker News enforce the idea that you must use the latest and coolest technology in order to be a \u2018rockstar\u2019 engineer.\r\n\r\nMarketing buzzwords like \u2018real-time\u2019, \u2018distributed\u2019, \u2018high-availability\u2019, and \u2018schemaless\u2019 impact our design decisions, and the expectation for applications to be \u2018scalable\u2019 often forces developers to prematurely introduce complexity and anti-patterns into their applications by making use of these untested and immature data stores.\r\n\r\nForget about adding the latest trendy data store into your stack; just use Postgres.\r\n\r\nThis talk will explore the capabilities of Postgres 9.4, and various use-cases where you can involve it as your primary datastore. I will cover some of the projects at Heroku where we have used Postgres, such as:\r\n\r\n- Quickly querying over 300M records to get a list of all users on a particular server at a particular point in time.\r\n- Providing almost real-time aggregations of all Heroku customer\u2019s usage.\r\n- Joining 3 different tables on 3 different database servers without any external code.\r\n- Creating a \u2018social graph\u2019 of all of Heroku\u2019s users based on commonly used IP addresses.\r\n- Ensuring that coupon codes are used only once, preventing attackers from exploiting \u2018race condition\u2019 bugs.\r\n\r\n In particular, I will focus on topics such as:\r\n\r\n- Storing, indexing, and querying schemaless data.\r\n- Materialized Views.\r\n- NOTIFY/LISTEN.\r\n- Storing and querying time-series data.\r\n- Updatable views.\r\n- Foreign tables.\r\n- Recursive views.\r\n- Stored functions.\r\n- Range Types\r\n- Partitioning and Sharding data.\r\n\r\nEach topic will include links to sample schemas and iPython notebooks so you can take these examples home with you.", "start": "2015-08-02 13:10:00", "schedule_id": 92, "url": "http://2015.pycon-au.org/schedule/30082/view_talk", "duration": "0:45:00", "presenters": "Rhys Elsmore"}, {"exclusive": false, "end": "2015-08-02 14:50:00", "title": "Make your logs work for you", "event_id": 22, "abstract": "Any modern business generates a lot of logs - from customer transactions all the way to the technical logs of your servers. Many times these logs are thrown away or just sit uselessly somewhere on disk.\r\n\r\nI would like to show you how you can make sense of all that data, how to collect and clean them, store them in a scalable fashion and, finally, explore and search across various systems.\r\n\r\nOnce we have all the data in one place I will go over some examples of more advanced analysis (beyond simple, though very useful, counting of things) like finding patterns and trends in your data.\r\n\r\nWe will use Elasticsearch, Logstash and Kibana (aka the ELK stack) to achieve that. All tools presented are open source and examples will be using real life use cases.", "start": "2015-08-02 14:05:00", "schedule_id": 95, "url": "http://2015.pycon-au.org/schedule/30012/view_talk", "duration": "0:45:00", "presenters": "Honza Kr\u00e1l"}, {"exclusive": false, "end": "2015-08-02 16:00:00", "title": "Life After Death: How to handle abandoned projects", "event_id": 62, "abstract": "Open Source software development is a very important part of the technology ecosystem. Some companies are taking this to heart by actively contributing developer time and resources in order to develop and open source internal projects. But people change employers, priorities and directions move, and systems die.\r\n\r\nIn this talk, we will discuss aspects of open source software development and the ownership of code, including licensing, copyright, project forking, and discussion about how to handle issues of developer departure and project abandonment.", "start": "2015-08-02 15:30:00", "schedule_id": 99, "url": "http://2015.pycon-au.org/schedule/30015/view_talk", "duration": "0:30:00", "presenters": "Katie McLaughlin"}, {"exclusive": false, "end": "2015-08-01 11:00:00", "title": "The Necessity of Configuration and System Management Tools", "event_id": 27, "abstract": "In practically every moment of our life we rely on the possibly largest communication medium humanity ever had. The Internet. Being able to at least partially understand how this *thing* works, we know that it takes a lot of work to keep it running smoothly.\r\n                                                                              \r\nTo do that IT administrators use configuration and system management tools to deploy changes to thousands of servers and keep them in sync. But how can one roll back a change done in the past that turned out to introduce a bug?\r\n                                                                              \r\nThis talk I will introduce you to configuration management and explain the problems that arise over time and make changing something back complicated or even impossible.", "start": "2015-08-01 10:30:00", "schedule_id": 102, "url": "http://2015.pycon-au.org/schedule/30034/view_talk", "duration": "0:30:00", "presenters": "Markus Holtermann"}, {"exclusive": false, "end": "2015-08-01 12:20:00", "title": "Ansible, Simplicity, and the Zen of Python", "event_id": 33, "abstract": "Ansible is a configuration management tool, written in Python, that has taken the world of IT automation by storm. Its most remarkable quality is simplicity.\r\n\r\nThe Zen of Python is a set of aphorisms which capture the design philosophy of the Python language, one being \"Simple is better than complex\".\r\n\r\nIn this talk, we\u2019ll look at some of the concrete ways that Ansible embodies the Zen of Python, in an attempt to unravel the true meaning of the sometimes cryptic aphorisms. Along the way we will consider why simplicity is a such good thing, yet tantalisingly out of reach in most software projects.", "start": "2015-08-01 11:50:00", "schedule_id": 103, "url": "http://2015.pycon-au.org/schedule/30057/view_talk", "duration": "0:30:00", "presenters": "Todd Owen"}, {"exclusive": false, "end": "2015-08-01 14:20:00", "title": "Testing ain't hard, even for SysAdmins", "event_id": 73, "abstract": "While fabric is a great tool for systems automation, saltstack is better. When Geoff decided to re-work the procedure at Trinity College for doing their regular package installs using salt, he ended up writing his own script that interacted with salt. He learned to love how testing improved his ability to debug this script without breaking his production environment, and wants to share what he learned with you.", "start": "2015-08-01 13:50:00", "schedule_id": 104, "url": "http://2015.pycon-au.org/schedule/30044/view_talk", "duration": "0:30:00", "presenters": "Geoff Crompton"}, {"exclusive": false, "end": "2015-07-31 09:50:00", "title": "OpenStack: A vision for the future", "event_id": 101, "abstract": "OpenStack as a phenomenon has been explosive and rather unprecedented. The highly decentralized decision making coupled with an aggressive release cadence have allowed us to be both an inclusive body and also ship software. However, crisp vision is not necessarily an emergent property of collective thought process. It's time for some vision to be presented and championed if we're going to take the next step in our evolution.\r\n\r\nLet's talk about a vision of what OpenStack needs to be, how it needs to be shaped, and what it will take to get us there.", "start": "2015-07-31 09:05:00", "schedule_id": 129, "url": "http://2015.pycon-au.org/schedule/30145/view_talk", "duration": "0:45:00", "presenters": "Monty Taylor"}, {"exclusive": false, "end": "2015-07-31 10:50:00", "title": "The Future of Identity (Keystone) in OpenStack", "event_id": 102, "abstract": "Since the Essex release, the OpenStack Identity Project (Keystone) has seen significant numbers of improvements. Some of these improvement include the addition of the V3 API, PKI Tokens, Trusts, Federated Identity, Non-Persistent Tokens, etc.\r\n\r\nThis talk will discuss the most recent developments for Keystone and what is being planned for Identity during Liberty and beyond.", "start": "2015-07-31 10:20:00", "schedule_id": 130, "url": "http://2015.pycon-au.org/schedule/30050/view_talk", "duration": "0:30:00", "presenters": "Morgan Fainberg"}, {"exclusive": false, "end": "2015-07-31 11:35:00", "title": "MidoNet: networking made easy", "event_id": 39, "abstract": "MidoNet is a Software Defined Networking solution that's currently integrated with OpenStack, Eucalyptus and Docker. We open sourced in November last year and we\u2019re working hard to build a strong community around it.\r\n\r\nThis presentation will cover MidoNet's core concepts, what distinguishes it from other SDN solutions, its core design and why you would choose it for your project/business. Or not. I'll also discuss some of the cool features that we're currently working on, especially around Multi-site Federation.\r\n\r\nYou\u2019ll be introduced to concepts like Topology Aware Switches and JIT Datapath flow computation as well as our distributed agent model. You\u2019ll learn why we strongly believe in having intelligent switches and how this impacts the overlay topology definition as well as the Network Function Virtualization implementation.\r\n\r\nMost importantly, we hope you'll head over to midonet.org and take it for a spin.", "start": "2015-07-31 11:05:00", "schedule_id": 131, "url": "http://2015.pycon-au.org/schedule/30071/view_talk", "duration": "0:30:00", "presenters": "Pino de Candia"}, {"exclusive": false, "end": "2015-07-31 12:20:00", "title": "Orchestration and CI/CD with Ansible and OpenStack", "event_id": 50, "abstract": "This project will demonstrate how to leverage CI/CD pipelines, to deploy and rollback applications in the Openstack Cloud. Best-practices allow to automate tasks and achieve high-degree of repeatability and robustness.\r\n\r\nJenkins will be used to implement continuous integration and continuous delivery jobs and pipelines. Packer will create images of disposable systems, being containers and Cloud servers.\r\nAnsible will be used to both create images with Packer, and eventually orchestrate provisioning of systems in staging and production environments in a blue-green fashion.\r\n\r\nDeep knowledge of deployment and workflow allows to continuously refine the process, adapt it to custom requirements, and make it smoother.\r\n\r\nThe following technologies will be presented:\r\n\r\n- Ansible\r\n- Docker on CoreOS cluster\r\n- Git repository\r\n- Jenkins\r\n- Openstack\r\n- Packer\r\n- Vagrant", "start": "2015-07-31 11:50:00", "schedule_id": 132, "url": "http://2015.pycon-au.org/schedule/30102/view_talk", "duration": "0:30:00", "presenters": "Simone Soldateschi"}, {"exclusive": false, "end": "2015-07-31 13:40:00", "title": "Practical Federated Identity", "event_id": 104, "abstract": "Federated Identity was once again a highlight of the OpenStack summit in Vancouver this time with the announcement of keystone to keystone federation that will pave the  way for inter-cloud workloads. \r\n\r\nIn the past I have done presentations on what Federated Identity is, however in this talk we delve into the more practical requirements of connecting to an IdP, discuss the changes in workflow required to authenticate your applications, how to configure web single sign on with horizon, what is possible today and the pain points you may encounter using federation.", "start": "2015-07-31 13:10:00", "schedule_id": 133, "url": "http://2015.pycon-au.org/schedule/30103/view_talk", "duration": "0:30:00", "presenters": "Jamie  Lennox"}, {"exclusive": false, "end": "2015-07-31 14:25:00", "title": "Privsep: A New Security Isolation Mechanism for OpenStack", "event_id": 100, "abstract": "OpenStack listens to requests over the network, and (when appropriate) performs operations on the host that require root superpowers.  Following best-practice design, most of the code runs as an unprivileged user and only the code that needs additional powers runs as root using a tool called \"rootwrap\".\r\n\r\nThis talk discusses the evolution that led to the current rootwrap design, why it has proven to be completely inadequate in practice, and presents a new \"privsep\" alternative currently being worked on within Oslo.", "start": "2015-07-31 13:55:00", "schedule_id": 134, "url": "http://2015.pycon-au.org/schedule/30143/view_talk", "duration": "0:30:00", "presenters": "Angus Lees"}, {"exclusive": false, "end": "2015-07-31 15:10:00", "title": "reliable testing with pip constraints", "event_id": 103, "abstract": "pip freeze files and similar techniques like buildout have been used for reliable testing and reliable deployments for some time. But they are not flexible enough to deal with situations like OpenStack where there are dozens of separate codebases, evolving independently, which still need the same rigour and reliability.\r\n\r\nEnter pip constraints, new in 7.1.0. I will cover their use, design, and how we're using them in devstack (and thus OpenStack CI) - and how you can (and should) use them in your local projects.", "start": "2015-07-31 14:40:00", "schedule_id": 135, "url": "http://2015.pycon-au.org/schedule/30146/view_talk", "duration": "0:30:00", "presenters": "Robert Collins"}, {"exclusive": false, "end": "2015-07-31 16:10:00", "title": "OpenStack Works, so now what?", "event_id": 43, "abstract": "While we've made a great big hoopla over the last few years about deploying OpenStack and what our development process is and other fascinating topics, it turns out that a cloud is not particularly interesting in and of itself. A cloud is a thing that you use to, well, DO something.\r\n\r\nThe OpenStack Infra team DO something with OpenStack clouds every day. It turns out it is related to both developing and deploying OpenStack, but let's forget about that for now. What we really are is a giant machine for manipulating OpenStacks, and we've gotten rather good at it. As a result of that ... we've been good little hackers and have produced a library, called shade, which is the embodiment of the knowledge we've gathered in trying to do useful things. shade is at the heart of our nodepool project, as well as the basis of the latest set of Ansible modules for OpenStack.\r\n\r\nSo - Let's talk about shade. And let's talk about Ansible. And let's talk about using clouds to actually perform work.", "start": "2015-07-31 15:40:00", "schedule_id": 136, "url": "http://2015.pycon-au.org/schedule/30081/view_talk", "duration": "0:30:00", "presenters": "Monty Taylor"}, {"exclusive": false, "end": "2015-07-31 16:50:00", "title": "Fast-forward to today's Zaqar", "event_id": 108, "abstract": "Zaqar is probably one of the projects that had been debated the most in OpenStack. Nonetheless, this service capable of providing multi-tenant messaging is now becoming a more relevant part of the OpenStack infrastructure. \r\n\r\nOne feature at a time, it's achieving its goals and improving itself. From multi-tenantcy, to subscriptions and persistent transports. In this talk, I'll present the project and its goals, the current state of art, its capabilities and architecture, the tools available and the related maintenance cost.", "start": "2015-07-31 16:20:00", "schedule_id": 138, "url": "http://2015.pycon-au.org/schedule/30148/view_talk", "duration": "0:30:00", "presenters": "Flavio Percoco"}, {"exclusive": false, "end": "2015-07-31 17:30:00", "title": "OpenStack Lightning Talks", "event_id": 105, "abstract": "", "start": "2015-07-31 17:00:00", "schedule_id": 139, "duration": "0:30:00"}], "Norfolk": [{"exclusive": false, "end": "2015-07-31 09:15:00", "title": "Introduction by Nick Coghlan & Code Club Australia", "event_id": 97, "abstract": "", "start": "2015-07-31 09:00:00", "schedule_id": 4, "duration": "0:15:00"}, {"exclusive": false, "end": "2015-07-31 17:30:00", "title": "Closing Keynote: Carrie Anne Philbin", "event_id": 11, "abstract": "", "start": "2015-07-31 15:40:00", "schedule_id": 22, "duration": "1:50:00"}, {"exclusive": false, "end": "2015-08-01 12:20:00", "title": "Spreadsheet-Driven Meta-Programming for Python", "event_id": 96, "abstract": "We've all had those very detail-oriented clients who are able to specify their needs very neatly, often by means of exhaustive spreadsheets. Wouldn't it be nice if we could turn these spreadsheets straight into Python code?\r\n\r\nIn this tutorial we'll use two sets of meta-programming techniques to derive Python code out of semi-formal descriptions: first, to build Django models requiring very detailed validation supplied by the client in a spreadsheet; second, to build a Python API for a hardware device, the description of which is maintained by the engineers in a spreadsheet.\r\n\r\nFor the Pycon attendance, this tutorial has both business value and technical value:\r\n\r\nBusiness value because spreadsheet-driven metaprogramming allows developers to:\r\n\r\n- respond to changes very fast by re-rendering their Python code from the modified spreadsheet descriptions.\r\n- avoid a certain class of human errors unavoidable when transcribing the requirements by hand.\r\n- save time which can be employed in other areas of the project, or with other clients.\r\n- clarify ambiguous specifications by making explicit all programmer's assumptions into the code generator.\r\n\r\nTechnical value because we'll be talking about:\r\n\r\n- api design,\r\n- Django modeling and validation,\r\n- consuming spreadsheets via csv dictreaders and elbow grease,\r\n- writing partially-applied functions via custom classes with a __call__ method,\r\n- implementing fluent apis with table-driven __getattr__ methods,\r\n- implementing iterators with __iter__ and __next__,\r\n- papering over some differences between Python 2 and Python 3 syntax,\r\n- and much, much more.\r\n\r\nWe'll be doing all of it in a hands-on manner, without getting distracted by abstract discussions of Python syntax. There will be some discussions of Python syntax, but they won't be abstract. We'll always have a goal in sight.\r\n\r\nLevel:\r\n\r\nIntermediate. You'll learn some advanced techniques, but all you need to really know in order to follow this tutorial is how lists, dictionaries, iteration and reading files work in Python. \r\n\r\nRequirements:\r\n\r\n- Attendees are expected to know basic Python (see above, under \"Level\").\r\n- A laptop and some knowledge of git will be useful for those wanting to follow along, but is not required. You can get a lot out of this tutorial just by watching and paying attention.\r\n", "start": "2015-08-01 10:30:00", "schedule_id": 56, "url": "http://2015.pycon-au.org/schedule/30144/view_talk", "duration": "1:50:00", "presenters": "Javier Candeira"}, {"exclusive": false, "end": "2015-08-01 13:40:00", "title": "Software Carpentry - Expansion and Partnerships in 2015", "event_id": 42, "abstract": "The Software Carpentry Foundation is an international volunteer organisation that teaches basic programming skills to researchers in science, engineering, medicine and other disciplines. Further, the foundation maintains a wealth of open-source, open-access teaching materials for a several programming related topics, including Python, the Unix shell, Git, SQL, R and Matlab. \r\n\r\nLessons from Software Carpentry are usually delivered in the form of two day workshops. Taught by trained instructors, these workshops cover automation of repetitive tasks using the shell, building modular and testable programs using Python or R and using version control to build software in a collaborative and efficient manner. Furthermore, workshops may be expanded, covering topics such as SQL and the use of databases to reliably store and maintain data. Though of course it is impossible to train expert programmers in two days, Software Carpentry has had great success in teaching \u2018just enough\u2019 to researchers that they can then return to the lab with a strong foundation of skills to build from.\r\n\r\nThis presentation will focus on the major progress that has been made by Software Carpentry in Australia and worldwide since PyCon-Au 2014. In particular, the pool of Australian instructors has dramatically increased through the live training session held as part of the Research Bazaar conference held at Melbourne University in February. As such, the presentation will be somewhat meta \u2013 answering the question \u2018What are the educational principles and techniques you should know before attempting to teach novice programmers?\u2019 The Software Carpentry lesson content has also evolved in the last 12 months, with the lesson content expanding to such topics as the use of Pandas and the more effective use of the iPython Notebook to work with data and visualisation. These changes allow Software Carpentry to cater to a broader audience of researchers. There will also be some discussion of the Research Bazaar conference, which partnered with Software Carpentry this year to not only train instructors, but also run a series of other \u2018basic skills\u2019 workshops for researchers. Finally, there is an interesting sister organisation of Software Carpentry, known as Data Carpentry, which focuses on improving the way researchers work with and store their data. \r\n\r\n", "start": "2015-08-01 13:10:00", "schedule_id": 60, "url": "http://2015.pycon-au.org/schedule/30073/view_talk", "duration": "0:30:00", "presenters": "Nic Crouch"}, {"exclusive": false, "end": "2015-08-01 14:20:00", "title": "Wax On, Wax Off: The Tough Love Guide to Mentoring", "event_id": 83, "abstract": "Everyone has more bugs than they can fix, more features they would like than time to write them. Wouldn't it be great to have some help? The problem is who knows enough about what you know to actually provide help the way you need?\r\n\r\nOpen Source has lots of fans and supporters, but many newcomers need the warmth of a person caring about their existence to actually turn them into a contributor.\r\n\r\nSomeone sees you working, is enamoured of what you do and wants to learn. You could break down the steps of what you are doing and get them to follow those steps, that is teaching.\r\n\r\nYou could recognize the deep inner understanding the is the foundation of your behaviour. You could decide to help someone build such a foundation for themselves. That is mentoring.\r\n\r\nMentoring is helping someone to fail and learn from it. Mentoring is about witnessing someone else's journey, whereever they go, whereever it takes them and saying I'm here, I'm with you, I'm watching. Mentoring is 99% listening.\r\n\r\nMentoring is much more time consuming than teaching. Teaching helps someone learn a skill, mentoring helps someone learn themselves.\r\n\r\nNow don't get me wrong, teaching is great and we need teachers and to be taught plus many great teachers can also be mentors. Teaching and mentoring are different.\r\n\r\nThis talk will discuss mentoring.\r\n\r\nWith examples drawn from learning acupuncture, yoga, astrology, pottery, working on film sets, heavy equipment operating as well as code, Anita will endeavour to share what she has learned about mentoring. She hopes you will take away the ability to recognize the difference between teaching and mentoring. She also hopes that should you decide to mentor you have some resources to help you strengthen your mentoring skills.", "start": "2015-08-01 13:50:00", "schedule_id": 64, "url": "http://2015.pycon-au.org/schedule/30083/view_talk", "duration": "0:30:00", "presenters": "Anita Kuno"}, {"exclusive": false, "end": "2015-08-01 15:00:00", "title": "Breaking backwards compatibility: The easy way!", "event_id": 34, "abstract": "Say you have this piece of software that many people use. One day, you wake up and you have the urge to make them suffer. Well, there\u2019s no better way to do so than breaking the software they\u2019re using.\r\n\r\nIn this talk, I\u2019ll walk you through very good ways to do so by showing examples taken from experience - because experience is the only thing that matters (TM) - so that you\u2019ll be able, by the time this talk ends, to do the same to your users.\r\n\r\n(P.S: If you\u2019ve a kinder hearth, you can also do the exact opposite of what I\u2019ll say and keep your users happy.)", "start": "2015-08-01 14:30:00", "schedule_id": 68, "url": "http://2015.pycon-au.org/schedule/30062/view_talk", "duration": "0:30:00", "presenters": "Flavio Percoco"}, {"exclusive": false, "end": "2015-08-01 16:00:00", "title": "Journey to becoming a Developer: an Administrators story", "event_id": 91, "abstract": "As a system operator we sometimes have to create scripts to maintain our infrastructure.  However because of DevOps some of us have taken a path to move more towards a developer role.  That journey can be a bit tough specially if you don\u2019t have the proper support in place.  Fortunately for me I had some help along the way and they gave me some direction that has improved my development.  Here is a list of small things to help you on that journey:\r\n\u2022\tChanging the way we think (mindset of a developer)\r\n\u2022\tIdiomatic python\r\n\u2022\tZen of Python by example\r\n\u2022\tTesting\r\n", "start": "2015-08-01 15:30:00", "schedule_id": 70, "url": "http://2015.pycon-au.org/schedule/30128/view_talk", "duration": "0:30:00", "presenters": "Victor Palma"}, {"exclusive": false, "end": "2015-08-01 16:40:00", "title": "Guarding the gate with Zuul", "event_id": 86, "abstract": "Zuul is a program that is used to gate the source code repositories of a project so that changes are only merged if they pass tests.\r\n\r\nBy gating we mean a more proactive continuous integration suite whereby tests must pass in order to merge (rather than a traditional CI that just gives a nightly status of the master branch). This means every commit is tested both during review time and before it merges - in case the repositories have changed in the mean time.\r\n\r\nThe result of using a gating system like zuul is that it's much harder to break trunk and your nightly builds should nearly always work.\r\n\r\nZuul can be configured to react to events and run various jobs with success or failure results depending on the scenario. Currently Zuul is only integrated with the gerrit code review platform but there are discussions about extending it to github.\r\n\r\nOne unique and powerful feature in Zuul is its ability to run tests in a predictive manner across multiple programs. Zuul predicts what multiple repositories will look like by the time the present job is finished and arranges the tests to be performed in that order. This stops race conditions when merging code in one repository that depends on code in another repository.\r\n\r\nZuul can manage thousands of jobs across hundreds of projects as evident by being the gate keeper for OpenStack.\r\n\r\nIn this talk we will look at what Zuul is, how to configure it and the internals of how it works.", "start": "2015-08-01 16:10:00", "schedule_id": 75, "url": "http://2015.pycon-au.org/schedule/30096/view_talk", "duration": "0:30:00", "presenters": "Joshua Hesketh"}, {"exclusive": false, "end": "2015-08-02 11:00:00", "title": "Adventures in pip land", "event_id": 59, "abstract": "pip has become an immensely popular tool for installing packages in Python, so much so that a bootstrap mechanism for it is now included in the standard library. But it has a dark side. Come and learn about some of the horrors that lurk within pip. Examples will include the distribute -> setuptools fork and convergence, dealing packages which attempt to use not-yet-installed dependencies, and the oh-man issue of resolving dependencies which pip still entirely punts on.", "start": "2015-08-02 10:30:00", "schedule_id": 79, "url": "http://2015.pycon-au.org/schedule/30127/view_talk", "duration": "0:30:00", "presenters": "Robert Collins"}, {"exclusive": false, "end": "2015-08-02 11:40:00", "title": "How your Python program behaves: a story on how to build a program slicer", "event_id": 36, "abstract": "Understanding the control flows in programs can be simple but increasingly difficult once the program becomes more complex. Debugging these programs can become problematic even worse with a meager amount of test coverage. So what to do? Increasing test coverage can cost you quite a lot of time and may not necessarily yield better results.\r\n\r\nUsing slicing as a technique for debugging programs aids to understand control flow better. A slice is a subset of the program which affects the values of the point of interest, also known as a slicing criterion. Using program slicing, reasoning about your code will become much quicker and easier as you can safely ignore any not relevant parts of the program.\r\n\r\nThis talk is about building a slicing tool for Python and the journey to this solution.", "start": "2015-08-02 11:10:00", "schedule_id": 85, "url": "http://2015.pycon-au.org/schedule/30060/view_talk", "duration": "0:30:00", "presenters": "R\u00f3man Joost"}, {"exclusive": false, "end": "2015-08-02 12:20:00", "title": "Fast, beautiful and easy Bayesian modelling: Can you have it all? ", "event_id": 52, "abstract": "Bayesian models are often more useful than classical statistical models when dealing with data concerning rare events in small populations. For example, if you are looking at the number of cancer diagnoses in a local government area, Bayesian models allow you to combine the individual and population level data to produce more reliable estimates. \r\n\r\nFitting these models can be both complex and computationally expensive, so we need it to be fast. Some of the datasets we deal with are extremely big, and the need for both tweaking and regular update cycles means we need to re-run the models frequently.\r\n\r\nBut beauty is also crucial. We need the package to be easy to code and describe, so that the statisticians and scientists we work with can build, maintain and understand their own models without needing to refer to programmers. We don\u2019t want a statistical black box. \r\n\r\nFinally, we need it to be easy. Easy to fit into our systems; technology-agnostic so we can change systems; and automatable so that the regular work of updating models with new data can happen \u2018hands off\u2019.  \r\n\r\nThere are a number of Bayesian modelling packages available, but how do you know which one to use? This talk will take you through the positives and negatives of the major packages, focusing on the specifics of my work in health statistics, as well as providing a general overview of what these packages can do. \r\n", "start": "2015-08-02 11:50:00", "schedule_id": 91, "url": "http://2015.pycon-au.org/schedule/30108/view_talk", "duration": "0:30:00", "presenters": "Rhydwyn McGuire"}, {"exclusive": false, "end": "2015-08-02 14:50:00", "title": "Applied Data Science", "event_id": 66, "abstract": "Ever tried to get into data science or machine learning, but struggled with getting your tech stack working, or found the maths off-putting? Curious about the limits of what your laptop or desktop really are when it comes to Big Data and predictive analytics? Ever wondered if these tools were really accessible to a general developer?\r\n\r\nNote: Attendees should consider visiting the project URL for instruction to get set up ahead of time. The will allow more time for coding, although setup assistance will also be available on the day.\r\n\r\nThis tutorial will provide attendees with a walkthrough on getting set up for this work, and an overview of a good tech stack / software ecosystem for beginning work. We'll cover some of the standard data sets in machine learning, and how to apply interesting algorithms. Random Forests and neural networks will be included, but with a minimum of fuss and jargon. There will be a focus on the application of technology, with only the most relevant theoretical aspects included. This is about actually getting things done.\r\n\r\nThis tutorial would be suitable for intermediate developers of any background, or experienced developers who would like an introduction to data science that gets to the point fast. Prerequisites: the ability to install Python modules on your laptop, the ability to set up a new virtual environment, and an interest in applying new techniques.\r\n\r\nThe tutorial will include clear walkthroughs, as well as allowing adequate time for discussion and individual learning. Please contact Tennessee via email ahead of time if you would like to get a head start on setting up your environment -- this may help you get more out of the tutorial. ", "start": "2015-08-02 13:10:00", "schedule_id": 98, "url": "http://2015.pycon-au.org/schedule/30016/view_talk", "duration": "1:40:00", "presenters": "Tennessee Leeuwenburg"}, {"exclusive": false, "end": "2015-08-02 16:00:00", "title": "Conda: a cross-platform, python-agnostic binary package manager.", "event_id": 92, "abstract": "You may be aware of pip & virtualenv for installing and maintaining your software libraries.\r\n\r\nYou may not be aware of the fantastic conda project.\r\n\r\nIt is not limited only to installing python software, also handles installing python itself, and has environments that isolate your code similar to virtualenv.\r\n\r\nCome find out this project which has been gaining enthusiastic support in the Scientific Python community. ", "start": "2015-08-02 15:30:00", "schedule_id": 101, "url": "http://2015.pycon-au.org/schedule/30130/view_talk", "duration": "0:30:00", "presenters": "Lex Hider"}, {"exclusive": false, "end": "2015-07-31 10:50:00", "title": "Using PyCharm Educational Edition", "event_id": 23, "abstract": "Late last year, JetBrains released a new version of their PyCharm IDE - the Educational Edition. This version has an integrated Python console, Debugger and Version Control System, along with educational features like the ability to create and deliver \"fill in the missing code\" exercises.\r\nThis talk highlights my experiences using PyCharm Lessons to teach beginners Python. \r\nAs a fairly new piece of software, there are a number of bugs that can cause a lot of pain when first starting out. This talk will demonstrate the steps to creating lessons and tests, publishing them and sharing them with students, while avoiding problems with the system. \r\nI will also share thoughts on using an IDE with beginners, how students have reacted and what kind of lessons have been successful.\r\n", "start": "2015-07-31 10:20:00", "schedule_id": 105, "url": "http://2015.pycon-au.org/schedule/30021/view_talk", "duration": "0:30:00", "presenters": "Thea Koutsoukis"}, {"exclusive": false, "end": "2015-07-31 11:35:00", "title": "Using Flask and Python Anywhere in the Classroom", "event_id": 19, "abstract": "Flask is a python web server and web framework that makes server-side programming using Python easy. Flask has less 'magic' than Django and therefore makes server requests and responses easier to understand for students. Python Anywhere is a cloud server that allows you to easily set up a live Flask or Django application. Students can develop and debug code online without the hassle of installing and configuring their development environments. This session will look at how Flask and Python Anywhere was used in the classroom with a year 12 student cohort. ", "start": "2015-07-31 11:05:00", "schedule_id": 106, "url": "http://2015.pycon-au.org/schedule/30007/view_talk", "duration": "0:30:00", "presenters": "Brad Nielsen"}, {"exclusive": false, "end": "2015-07-31 12:20:00", "title": "Rapid prototyping with teenagers", "event_id": 57, "abstract": "\r\nThis is teamwork and rapid prototyping challenges on steroids. Imagine 15 high school kids, most of whom have only just learned to program, working together to design and build a fully functional social networking site in 3 days. \r\n\r\nThis project is done as part of the NCSS (National Computer Science School) summer program. NCSS has been running for 20 years, and I've been involved in the last 7, so that's 6 different social networking sites (we used to build search engines, but apparently they're not cool anymore).\r\n\r\nI'll go through the technical details, the tools we use, how the site functions, and how we structure the different pieces to come together. I'll also show off some extra fun projects we throw at the advanced kids, like building their own Django-like template engine, and secure hashing of passwords.\r\n\r\nA lot of the challenge of this undertaking is inevitably also project management and coordination of the team. These students have never written tests before, don't know what version control is and don't understand what it means to agree on an API. Hilarity and frustration can (and does) ensue, especially during the last night, which is an all-nighter.\r\n\r\nCome along to learn how to do project management with the least experienced team possible and how to hack together a functional prototype webapp with minimum effort.\r\n", "start": "2015-07-31 11:50:00", "schedule_id": 107, "url": "http://2015.pycon-au.org/schedule/30116/view_talk", "duration": "0:30:00", "presenters": "Katie Bell"}, {"exclusive": false, "end": "2015-07-31 13:40:00", "title": "Trials & tribulations teaching Python at CoderDojo", "event_id": 29, "abstract": "This talk will relate the experience of teaching coding, including Python, to a (nominally) 6-18 age group at a local Brisbane CoderDojo for 2015 Term 1 and 2.\r\n\r\nScratch and Alice have become very popular for teaching beginner coding at CoderDojo events. Languages such as Python, and even HTML/CSS, are more difficult to introduce, partly because more skills are required before something \"useful\" can be created, and partly because the \"building blocks\" are usually not presented with the same visual immediacy as Scratch, and similar environments. This talk presents some of the difficulties found in transitioning from graphical environments to Python, and observations in using existing tools for learning Python with younger students.\r\n", "start": "2015-07-31 13:10:00", "schedule_id": 108, "url": "http://2015.pycon-au.org/schedule/30085/view_talk", "duration": "0:30:00", "presenters": "Caleb Hattingh"}, {"exclusive": false, "end": "2015-07-31 14:25:00", "title": "Writing Python For Kids", "event_id": 60, "abstract": "Thinking of writing a book? We are in the midst of a boom in interest in amateur programming, particularly among children. Brendan spent the most recent summer past using his blog python4kids.brendanscott.com as inspiration for a new project based instructional book, Python for Kids for Dummies (US release by Wiley this northern summer). This talk will provide an overview of the development cycle for the book both in respect of the book's content and the process involved in creating that content and shepherding it through the publisher's internal processes. \r\nTopics to be covered include engaging and negotiating with the publisher, the different functions provided by a publisher, project management of the writing, interacting with editorial and technical reviewers, integrating with an existing \"house style\", art requirements and cross platform issues. In relation to content, Brendan will discuss the thought that went into targeting the material to a kids audience and the challenges involved in structuring a narrative which wends its way through each of the concepts that need to be introduced and providing a motivation for each of them. This includes how the content was structured, what concepts were included and what were passed over, trying to balance material to maintain interest without overwhelming the readers, the tension between explanation and demonstration and how to remain mindful of the audience's limitations. The highs, the lows, the triumphs (getting it done!) and tragedies (whole chapters consigned to the pyre), it's all here. \r\n\r\nThe book on Amazon:\r\nhttp://www.amazon.com/Python-For-Kids-Dummies/dp/1119093104", "start": "2015-07-31 13:55:00", "schedule_id": 109, "url": "http://2015.pycon-au.org/schedule/30119/view_talk", "duration": "0:30:00", "presenters": "Brendan Scott"}, {"exclusive": false, "end": "2015-07-31 15:10:00", "title": "Open edX: An edX partner perspective", "event_id": 64, "abstract": "Open edX is an open source MOOC platform. It powers courses on edx.org and those of the many adopters of the Open edX platform. Open edX is a complex platform with many interconnected parts, but the largest components are Python Django apps. \r\nThis presentation will describe the experiences of developers at The University of Queensland's UQx project from 2013 when UQ joined the edX consortium through to the present and the future. Your presenters are John Zornig, Director UQx (former Senior Architect) and Andrew Dekker Senior Developer.", "start": "2015-07-31 14:40:00", "schedule_id": 110, "url": "http://2015.pycon-au.org/schedule/30142/view_talk", "duration": "0:30:00", "presenters": "John Zornig"}, {"exclusive": false, "end": "2015-07-31 09:50:00", "title": "Teaching Programming for the fun of IT", "event_id": 106, "abstract": "The teaching of programming concepts has come a long way in terms of tools and pedagogies but the underlying concepts appear timeless. In this session we will look at the place of programming in schools in the junior school through National Curriculum imperatives like Digital Technologies and the Information Processing and Technology perspectives and how Python can have a place here.", "start": "2015-07-31 09:20:00", "schedule_id": 141, "url": "http://2015.pycon-au.org/schedule/30147/view_talk", "duration": "0:30:00", "presenters": "Peter Whitehouse"}], "Kennedy": [{"exclusive": false, "end": "2015-07-31 09:50:00", "title": "Custom Python Applications in Neuroscience", "event_id": 51, "abstract": "There are several (open source and proprietary) packages available for image processing in neuroscience. However, each package has its own strengths and limitations depending on the purpose of the analysis. After testing many of them at work, we have found a need to develop our own packages (at the Brain Imaging Laboratory, MBC). We will expose a couple of python tools that could be handy for anyone dealing with neuroscience (or medical images in general) in their projects. The tools presented are for (i.) quick image viewing, (ii.) dicom image sorting and de-identifying and (iii.) automatic email notifications to alert about server warnings (e.g., if machine is down, close to full capacity, failing to connect to local image archiving network (PACS), etc..). While many of these tools could have been written in other programming languages, we will explain the reasons for choosing python, share a bit about our python learning journey and perform a brief demonstration on the command line.", "start": "2015-07-31 09:20:00", "schedule_id": 5, "url": "http://2015.pycon-au.org/schedule/30107/view_talk", "duration": "0:30:00", "presenters": "Simon Salinas"}, {"exclusive": false, "end": "2015-08-01 11:00:00", "title": "Money, Money, Money - Writing software, in a rich (wo)man's world", "event_id": 30, "abstract": "Free software advocates talk about two types of \"Free\": Free as in freedom, and Free as in beer. While Free (as in freedom) software is unquestionably better for users and developers alike, Free (as in beer) software doesn't pay the bills. \r\n\r\nTalk to any prominent open source developer, and amongst the success stories, you'll also hear some consistent troubles - that they've got great ideas and grand plans, but no time to execute; that they're about to burn out due to the pressues of maintaining their project; or that they've had yet another mailing list discussion with someone who doesn't understand they're a volunteer. All of these problems stem from a fundamental disconnect: the discrepancy between the clear demand for a software product, and the ability to convert that demand into time needed to service that demand - and that means money.\r\n\r\nSo is there a way to pay the piper? Or is open source doomed to eek out an existence at the edges of \"a real job\"?\r\n", "start": "2015-08-01 10:30:00", "schedule_id": 49, "url": "http://2015.pycon-au.org/schedule/30043/view_talk", "duration": "0:30:00", "presenters": "Russell Keith-Magee"}, {"exclusive": false, "end": "2015-08-01 11:40:00", "title": "Tales from Managing an Open Source Python Game", "event_id": 84, "abstract": "Ten years ago, a rag-tag bunch of computer camp leaders decided to create a game that would teach kids teamwork and strategy, and which the kids could feel a part of. In those days, the presenter was a young dreamer with time on his hands, and he chose to spearhead the project. Was this folly? You be the judge. The game was Trosnoth. It is developed in Python, using Pygame and Twisted.\r\nIn this presentation, Josh will tell the story of Trosnoth, and share some of the many lessons, both social and technical, which he learnt while managing the project. Maybe you\u2019ve considered writing a game in Python. Maybe you\u2019re not sure how Open Source projects really work. Maybe you\u2019re an experienced project manager who wants to laugh at some of the mistakes Josh made. Or maybe you just enjoy hearing Josh tell stories. Whoever you are, there\u2019s bound to be something in this presentation for you.", "start": "2015-08-01 11:10:00", "schedule_id": 52, "url": "http://2015.pycon-au.org/schedule/30089/view_talk", "duration": "0:30:00", "presenters": "Josh Bartlett"}, {"exclusive": false, "end": "2015-08-01 12:20:00", "title": "To AST and Beyond", "event_id": 31, "abstract": "Follow my journey of building a super fast templating engine which turns your markup into Python code through AST.\r\n\r\nUncover the power available in Python's Abstract Syntax Tree module for building and manipulating code ... in your code!", "start": "2015-08-01 11:50:00", "schedule_id": 55, "url": "http://2015.pycon-au.org/schedule/30046/view_talk", "duration": "0:30:00", "presenters": "Curtis Maloney"}, {"exclusive": false, "end": "2015-08-01 13:40:00", "title": "Swagger driven REST API development with the Falcon web server", "event_id": 18, "abstract": "Swagger is a JSON format for defining and documenting REST API's. Falcon is a lightweight Python web server designed specifically for building REST web services.\r\n\r\nThis presentation shows you how to combine Swagger API specifications with the Falcon web server to make REST API development incredibly fast and easy.\r\n\r\n", "start": "2015-08-01 13:10:00", "schedule_id": 59, "url": "http://2015.pycon-au.org/schedule/30008/view_talk", "duration": "0:30:00", "presenters": "Andrew Stuart"}, {"exclusive": false, "end": "2015-08-01 14:20:00", "title": "Using benchmarks to understand how WSGI servers work.", "event_id": 85, "abstract": "During the development of a Python web application the inbuilt development web server provided by the web framework is often what is used. When moving to a production environment, one has to choose a more capable production grade WSGI deployment mechanism. Which of the various WSGI servers available is going to be the most suitable is going to depend on a range of criteria related to your specific web applications requirements.\r\n\r\nUnfortunately, rather than look at the bigger picture and what would be the most suitable across such criteria, many people will simply rush to trying to run an overly simplistic benchmark on the various WSGI servers and make the decision based purely on perceptions of whether one WSGI server is faster than the alternatives. Worse, they don't even attempt to do the benchmarks themselves and instead rely on benchmarks published on some public blog site.\r\n\r\nSuch public benchmarks as are available are often flawed, or cover such a narrow use case as to in no way be relevant to that users own specific situation.\r\n\r\nA further problem with such benchmarks is that they try and evaluate the performance of a WSGI server as if they are a black box. As such, there is no attempt to try and work out what is actually going on within the WSGI server and why it is exhibiting the behaviour it is.\r\n\r\nThe purpose of this talk is to explore a number of different micro benchmarks, using them to work out what is actually going on within a WSGI server when they are run. The analysis will delve down into, and look at the different ways that WSGI servers are implemented and deployed. The behaviour under the different benchmarks will be determined using fine grained metrics captured from hooking instrumentation into the WSGI servers themselves.\r\n\r\nAs there are many factors which could be investigated, the talk cannot be entirely comprehensive, but selected benchmarks drawing from a sub set of the following areas will be presented:\r\n\r\n* multithreading\r\n* CPU intensive tasks\r\n* long running requests\r\n* combination of short and long running requests\r\n* large request content uploads\r\n* large amounts of response content\r\n* blocking on back end services\r\n* slow HTTP clients\r\n\r\nThe tests will look not just at response times, but also server capacity utilisation, CPU and memory utilisation.\r\n\r\nAlthough the discussion will primarily revolve around WSGI servers, a comparison will also be made for some tests were one instead to use an ASYNC web application framework alone, or in conjunction with a WSGI adapter.\r\n\r\nTo conclude, an attempt will be made to summarise what you should be looking at in a WSGI server to determine if it is the right choice for your use case.", "start": "2015-08-01 13:50:00", "schedule_id": 63, "url": "http://2015.pycon-au.org/schedule/30093/view_talk", "duration": "0:30:00", "presenters": "Graham Dumpleton"}, {"exclusive": false, "end": "2015-08-01 15:00:00", "title": "JSON Standards for the Web", "event_id": 49, "abstract": "RESTful APIs reign supreme! No longer do developers have to put up with SOAP\r\nand XML-RPC and those bulky, schema laden exchanges. JSON maps almost directly\r\nto python and we're flying again!\r\n\r\nOver time the chaos of free form JSON representations has subsided and a number\r\nof best practices have appeared such that we now expect certain patterns when\r\nencountering a new JSON REST API. The next step is to standardize these\r\npractices and start offering the predictability and code reuse we lost years\r\nago.\r\n\r\nThe talk will provide an overview of current attempts at standardizing JSON\r\nexchanges such as jsonapi, jsonhome and jsonschema.", "start": "2015-08-01 14:30:00", "schedule_id": 67, "url": "http://2015.pycon-au.org/schedule/30101/view_talk", "duration": "0:30:00", "presenters": "Jamie  Lennox"}, {"exclusive": false, "end": "2015-08-02 11:00:00", "title": "Learn You a Flask", "event_id": 80, "abstract": "Flask is a Python web framework that is both lightweight and powerful. With an active community, and a diverse and versatile choice of plugins, Flask allows you to scale from simple single-URL websites through to highly complex website architectures. \r\n\r\nIn this talk we will begin by setting up a simple Flask powered website and get it running on the Heroku PaaS. We will then demonstrate how to integrate Flask and SQLAlchemy (a powerful ORM) to allow database access and get this uploaded and working on Heroku as well.\r\n\r\nFinally we will discuss some more advanced concepts and review a number of the Flask plugins to get you started on the path to building great web-based projects.\r\n", "start": "2015-08-02 10:30:00", "schedule_id": 78, "url": "http://2015.pycon-au.org/schedule/30072/view_talk", "duration": "0:30:00", "presenters": "Lachlan Blackhall"}, {"exclusive": false, "end": "2015-08-02 11:40:00", "title": "Arrested Development - surviving the awkward adolescence of a microservices-based application", "event_id": 37, "abstract": "The potential upside of microservices is significant and exciting. So much so that Yelp's Transaction Platform committed from the start to an architecture of small, cooperative microservices. This talk explores the inevitable complications that arise in successful projects based on microservices as they grow larger and stretch both their own architecture and the developers responsible for them. Come hear tales of terror (tight coupling! low test coverage!), stories which will warm your heart (agility! strong interfaces!), and everything in between as we follow the adventures of our plucky team.\r\n\r\nThe talk will be focused on the functional, cultural, and reliability challenges which occur as a microservices-based project evolves and expands over time. Particular attention will be paid to where these diverge from the utopian way microservices are often described, and to the practical approaches your project can take to mitigate issues and avoid the traps inherent in scaling up this type of approach. My goal is to share with attendees some mistakes we've made, some successful methods for growing gracefully, and above all with useful (and maybe unexpected!) lessons from the trenches they can apply to their own work.", "start": "2015-08-02 11:10:00", "schedule_id": 84, "url": "http://2015.pycon-au.org/schedule/30064/view_talk", "duration": "0:30:00", "presenters": "Scott Triglia"}, {"exclusive": false, "end": "2015-08-02 12:20:00", "title": "Talking to Browsers with CORS", "event_id": 25, "abstract": "This session will demonstrate how to break the browser's single origin policy, and permit true separability between a Python API and a browser-based client.", "start": "2015-08-02 11:50:00", "schedule_id": 88, "url": "http://2015.pycon-au.org/schedule/30031/view_talk", "duration": "0:30:00", "presenters": "Michael Krotscheck"}, {"exclusive": false, "end": "2015-08-02 13:55:00", "title": "Test-Driven Repair", "event_id": 71, "abstract": "\u201cit is impossible BY DEFINITION to do Test-Driven Development after the code is written.\u201d \u2014 Tim Ottinger, author of \u2018Clean Code\u2019, on Twitter [1].\r\n\r\nAutomated testing is one of the most important tools in the modern programming toolbox: good tests help you find regressions early, and help you make sure your code is right before it ships. Test-driven development is a great way to make sure your software is up to specification before you start work. Even better, it makes sure your software\u2019s architecture is amenable to writing tests from day 1.\r\n\r\nSo what happens when you find yourself working on code where automated testing took a back seat to being shipped? Chances are you\u2019ll have a sea of bugs, strung together in a structure where writing simple unit tests just isn\u2019t going to happen.\r\n\r\nBroken code is a support burden, and if it\u2019s in production, you\u2019ve got no choice but to make things work. Luckily, automated testing isn\u2019t a lost cause here!\r\n\r\nIn this talk, we\u2019ll look at how to approach automated testing on late-stage, or even production code\u2026 or in any situation when you don\u2019t have the luxury of starting with a test-driven structure. We\u2019ll look at techniques that I\u2019ve used to analyse faults in existing code, and how to translate those into tests, and how to use that to fix bugs.\r\n\r\nIn particular, we\u2019ll look at:\r\n\r\n- Tooling and metrics to help you decide what code to test, and how to measure progress when you\u2019re writing tests\r\n- Approaches to constructing test cases for old code, including using data-driven approaches, and approaches based on requirements specifications\r\n- Granularity \u2014 making tests on old code granular enough is difficult, so we\u2019ll look at the trade-offs between unit and integration tests on old code, and ways to make integration-level tests granular enough to make results reliable\r\n\r\nWe\u2019ll see that testing old code is both achievable, and actually a worthwhile exercise. You\u2019ll find bugs. You\u2019ll increase quality. You\u2019ll make your code more maintainable! Do try it!\r\n\r\n[1] https://twitter.com/tottinge/status/544632253205475329\r\n", "start": "2015-08-02 13:10:00", "schedule_id": 94, "url": "http://2015.pycon-au.org/schedule/30040/view_talk", "duration": "0:45:00", "presenters": "Christopher Neugebauer"}, {"exclusive": false, "end": "2015-08-02 14:50:00", "title": "Playing to lose: making sensible security decisions by assuming the worst", "event_id": 47, "abstract": "The unfortunate truth about networked applications is that an attacker only needs to know one thing you didn't know to get past your defenses. You need to know everything, they don't.\r\n\r\nThe odds aren't in your favour. You're eventually going to get hacked.\r\n\r\nThat's the bad news. But if you stop thinking about a security compromise as that thing you close your eyes and hope never happens\", and instead start thinking about it as an inevitability, then you can start making better security decisions.\r\n\r\n\"If they compromise my web servers, how do I protect my application servers?\"\r\n\r\n\"If they break my application server code, how can I prevent them from gaining a foothold on my infrastructure?\"\r\n\r\n\"If they poison my web-site with cross-site scripting, how do I find out before my users get hurt?\"\r\n\r\nIn short: \"If I\u2019m going to get hacked, how do I make it hurt less?\"\r\n\r\nThis is a talk about defense in depth.\r\n\r\nBuilding a secure system isn\u2019t about luck, it\u2019s about planning.", "start": "2015-08-02 14:05:00", "schedule_id": 97, "url": "http://2015.pycon-au.org/schedule/30088/view_talk", "duration": "0:45:00", "presenters": "Tom Eastman"}, {"exclusive": false, "end": "2015-07-31 10:50:00", "title": "A Scientific Game Engine in the Cloud", "event_id": 93, "abstract": "Azrael is a game engine for engineers. Unlike traditional engines it emphasises\r\naccurate physics, runs in the Cloud, offers a language agnostic API, and is written in (mostly) Python.\r\n\r\nIts main purpose is to make it easy for engineers to build, study, and control\r\ncomplex physical systems, for instance how to auto pilot a space ship; or a fleet\r\nthereof; in formation; through an Asteroid belt...\r\n\r\nI will show a live demo to illustrate the concept. It uses a simple control\r\nalgorithm to manoeuvre an object to a pre defined position in space. Once there\r\nit will maintain that position despite random collisions with other objects.\r\n\r\nFor more information and demo videos please visit https://olitheolix.com/azrael.\r\nThe code is available at https://github.com/olitheolix/azrael.\r\n", "start": "2015-07-31 10:20:00", "schedule_id": 119, "url": "http://2015.pycon-au.org/schedule/30004/view_talk", "duration": "0:30:00", "presenters": "Oliver Nagy"}, {"exclusive": false, "end": "2015-07-31 11:35:00", "title": "Adventures in scikit-learn's Random Forest", "event_id": 55, "abstract": "Scikit-learn's Random Forests are a great first choice for tackling a machine-learning problem. They are easy to use with only a handful of tuning parameters but nevertheless produce good results. Additionally, a separate cross-validation step can be avoided using the out-of-bag sample predictions generated during the construction of the forest, and finally they make it relatively easy to identify and extract the most important features of the sample data.\r\n\r\nIn this talk we\u2019ll go through the process of using scikit-learn\u2019s random forests using a financial data-set (of ASX equities) as an example. We\u2019ll begin with a basic overview of the random forest algorithm and of the tuning parameters available and their impact on the effectiveness of the forest. Secondly we\u2019ll go over the basic usage of scikit-learn\u2019s random forests and in the process trouble-shoot some common problems such as dealing with missing sample data. Next we\u2019ll discuss the use of out-of-bag sample predictions as a method for quickly performing cross-validation and optimising the tuning parameters. Finally we\u2019ll look at how to extract information from the model that scikit-learn has generated, most notably the relative importances of the features in the sample data.", "start": "2015-07-31 11:05:00", "schedule_id": 120, "url": "http://2015.pycon-au.org/schedule/30110/view_talk", "duration": "0:30:00", "presenters": "Gregory Saunders"}, {"exclusive": false, "end": "2015-07-31 12:20:00", "title": "Not Invented Here: Porting Scientific Software to Python", "event_id": 94, "abstract": "Are you a scientist who's can't get work done because you the tools you need aren't available?  Do your collaborators use a different computing platform to you?  Are you struggling to find anyone who can help you solve your software integration problems?\r\n\r\nThese challenges occur because scientists face some of the most difficult challenges in computing  - dealing new and diverse problems;  working with prototypes and legacy systems; collaborating with domain experts, rather than software experts; all while delivering on time with minimal resources. \r\n\r\nPython has a reputation for being a language that excels at \"glueing\" different systems together in a style that is both easy to understand, test and maintain. More importantly using Python is one way to make sure that you spend your time working on research, rather than coding and debugging.\r\n\r\nThis presentation will demonstrate some of the skills needed to integrate software from other languages into the Python Scientific computing ecosystem using subprocesses, ctypes, cython the Jupyter project - and what do do when none of these approaches are the right.\r\n", "start": "2015-07-31 11:50:00", "schedule_id": 121, "url": "http://2015.pycon-au.org/schedule/30052/view_talk", "duration": "0:30:00", "presenters": "Andrew Walker"}, {"exclusive": false, "end": "2015-07-31 13:40:00", "title": "An End-to-End Machine Learning Ecosystem in a Quarter", "event_id": 40, "abstract": "Building a machine learning model is hard. Building and serving individual machine learning models for thousands of customers every single day is harder. Model training time must be kept to a minimum, memory constraints are exacerbated and the love and insight that one would usually apply to refining a single model must be automated and scaled. At Zendesk we successfully use pandas, scikit-learn, flask and hadoop to run a machine learning ecosystem that builds, tunes and serves account specific models via an API for many of our customers. This talk is about what we learnt building it and how Python's data stack let us get it to production really really fast.", "start": "2015-07-31 13:10:00", "schedule_id": 122, "url": "http://2015.pycon-au.org/schedule/30092/view_talk", "duration": "0:30:00", "presenters": "Chris Hausler"}, {"exclusive": false, "end": "2015-07-31 14:25:00", "title": "Blaze: crunching data in different formats through a single API.", "event_id": 61, "abstract": "Blaze allows you to use a pandas/numpy like interface to query your data, whether it be in CSV format, SQL database, noSQL database.\r\n\r\nOdo allows you to easily migrate your data between most formats, be it JSON, SQL database, CSV, python data structures with just a few lines of code.\r\n\r\nCome learn about these exciting new parts of the python data ecosystem.\r\nLearn how to crunch your data, and not necessarily have to learn SQL or mongodb to do so.", "start": "2015-07-31 13:55:00", "schedule_id": 123, "url": "http://2015.pycon-au.org/schedule/30129/view_talk", "duration": "0:30:00", "presenters": "Lex Hider"}, {"exclusive": false, "end": "2015-07-31 15:10:00", "title": "Automated Scientific Pipelines With Doit", "event_id": 38, "abstract": "Doit is a Python library for task management and automation. It provides a straightforward Python approach to manage and execute any series of interrelated tasks, such as in scientific data analysis. Doit can be used as a command line substitute for Make to drive existing tools/applications, or can be integrated directly with your application at the Python level. Task automation can be as simple as manually specifying a dictionary of dependencies, target files and actions, or as complex as automatically determining dependencies and whether a task is up to date using arbitrary Python expressions. This talk will give an overview of why and how to use doit for your project.\r\n\r\nThis talk assumes no particular background except some familiarity with Python, but is geared towards a scientific computing audience and will touch on automated data analysis as a motivating example.", "start": "2015-07-31 14:40:00", "schedule_id": 124, "url": "http://2015.pycon-au.org/schedule/30069/view_talk", "duration": "0:30:00", "presenters": "Sam Hames"}, {"exclusive": false, "end": "2015-07-31 16:10:00", "title": "Predicting sports winners using data analytics with pandas and scikit-learn", "event_id": 58, "abstract": "The pandas and scikit-learn packages combine together to produce a powerful toolkit for data analytics. In this talk, we will be using them together to analyse the outcome of NBA games, trying to predict the winner of a match. There is plenty of data out there to allow us to create good predictions \u2013 the key is getting it in the right format and building the right model.\r\n\r\nIn this talk we will go through importing data from the net, cleaning it up, creating new features, and building a predictive model. We then evaluate how well we did, using recent NBA data. The model we use will be a decision tree ensemble called a random forest.", "start": "2015-07-31 15:40:00", "schedule_id": 125, "url": "http://2015.pycon-au.org/schedule/30118/view_talk", "duration": "0:30:00", "presenters": "Robert Layton"}, {"exclusive": false, "end": "2015-07-31 16:50:00", "title": "Karaage Gardening", "event_id": 98, "abstract": "Karaage is an open source Python/Django application for managing users and projects on HPC clusters. It is being used in production in a number of sites across Australia. This talk will discuss turning a messy legacy software base into a modern software platform that is much a cleaner mess (\"gardening\"). I will also talk about some of the lessons learnt along the way, including things that went well, and things that could have been handled better.", "start": "2015-07-31 16:20:00", "schedule_id": 126, "url": "http://2015.pycon-au.org/schedule/30098/view_talk", "duration": "0:30:00", "presenters": "Brian May"}, {"exclusive": false, "end": "2015-07-31 09:15:00", "title": "Ed Schofield: Science & Data Miniconf Opening", "event_id": 10, "abstract": "", "start": "2015-07-31 09:00:00", "schedule_id": 128, "duration": "0:15:00"}, {"exclusive": false, "end": "2015-07-31 17:30:00", "title": "Government dashboards and open data.", "event_id": 112, "abstract": "More and more governments around Australia and the world are starting to talk the talk on Open Data as an essential component of open government.  But to what extent do they walk the walk?  CKAN based data repositories like data.gov.au (at the Australian federal level) provide powerful APIs for searching and discovering published data-sets, but at the end of all that search and discovery, the data-sets themselves sometimes make it clear that somebody somewhere has missed the point.\r\n\r\nIn developing dashboard applications for state and federal government agencies over the past 6 months, I have seen the good, the bad and the ugly not only in terms of API design and data set presentation, but also in terms of commitment to Open Data.", "start": "2015-07-31 17:00:00", "schedule_id": 142, "url": "http://2015.pycon-au.org/schedule/30151/view_talk", "duration": "0:30:00", "presenters": "Paul Haesler"}], "Grand Windsor Ballroom": [{"exclusive": false, "end": "2015-08-04 10:00:00", "title": "Sprint", "event_id": 17, "abstract": "", "start": "2015-08-04 08:00:00", "schedule_id": 44, "duration": "2:00:00"}, {"exclusive": false, "end": "2015-08-04 15:00:00", "title": "Sprint", "event_id": 17, "abstract": "", "start": "2015-08-04 13:00:00", "schedule_id": 45, "duration": "2:00:00"}, {"exclusive": true, "end": "2015-08-04 13:00:00", "title": "Lunch", "event_id": 6, "abstract": "", "start": "2015-08-04 12:00:00", "schedule_id": 46, "duration": "1:00:00"}, {"exclusive": false, "end": "2015-08-03 10:00:00", "title": "Sprint", "event_id": 17, "abstract": "", "start": "2015-08-03 08:00:00", "schedule_id": 143, "duration": "2:00:00"}, {"exclusive": true, "end": "2015-08-03 10:30:00", "title": "Morning Tea", "event_id": 4, "abstract": "", "start": "2015-08-03 10:00:00", "schedule_id": 144, "duration": "0:30:00"}, {"exclusive": false, "end": "2015-08-03 13:00:00", "title": "Sprint", "event_id": 17, "abstract": "", "start": "2015-08-03 10:30:00", "schedule_id": 145, "duration": "2:30:00"}, {"exclusive": true, "end": "2015-08-03 14:00:00", "title": "Lunch", "event_id": 6, "abstract": "", "start": "2015-08-03 13:00:00", "schedule_id": 146, "duration": "1:00:00"}, {"exclusive": false, "end": "2015-08-03 16:00:00", "title": "Sprint", "event_id": 17, "abstract": "", "start": "2015-08-03 14:00:00", "schedule_id": 147, "duration": "2:00:00"}, {"exclusive": true, "end": "2015-08-03 16:30:00", "title": "Afternoon Tea", "event_id": 5, "abstract": "", "start": "2015-08-03 16:00:00", "schedule_id": 148, "duration": "0:30:00"}, {"exclusive": false, "end": "2015-08-03 23:00:00", "title": "Sprint", "event_id": 17, "abstract": "", "start": "2015-08-03 16:30:00", "schedule_id": 149, "duration": "6:30:00"}, {"exclusive": true, "end": "2015-08-04 10:30:00", "title": "Morning Tea", "event_id": 4, "abstract": "", "start": "2015-08-04 10:00:00", "schedule_id": 150, "duration": "0:30:00"}, {"exclusive": false, "end": "2015-08-04 12:00:00", "title": "Sprint", "event_id": 17, "abstract": "", "start": "2015-08-04 10:30:00", "schedule_id": 151, "duration": "1:30:00"}, {"exclusive": true, "end": "2015-08-04 15:30:00", "title": "Afternoon Tea", "event_id": 5, "abstract": "", "start": "2015-08-04 15:00:00", "schedule_id": 152, "duration": "0:30:00"}, {"exclusive": false, "end": "2015-08-04 23:00:00", "title": "Sprint", "event_id": 17, "abstract": "", "start": "2015-08-04 15:30:00", "schedule_id": 153, "duration": "7:30:00"}], "Presidential Ballroom": [{"exclusive": true, "end": "2015-08-01 22:00:00", "title": "Dinner", "event_id": 14, "abstract": "", "start": "2015-08-01 19:30:00", "schedule_id": 31, "duration": "2:30:00"}], "Roosevelt": [{"exclusive": false, "end": "2015-07-31 09:50:00", "title": "What Django can learn from Twisted", "event_id": 41, "abstract": "Web frameworks like Django are designed around the traditional request-response cycle \u2014 a request comes in, a response is generated, and that is delivered to the client. In the day of \u201csingle page\u201d applications, where only sections of the page are updated through requests, doing real-time can be clunky. Twisted, and things that build off it, like Django Channels, might be worth thinking about, and this is what this talk will be about.", "start": "2015-07-31 09:00:00", "schedule_id": 2, "url": "http://2015.pycon-au.org/schedule/30076/view_talk", "duration": "0:50:00", "presenters": "Amber \"Hawkie\" Brown"}, {"exclusive": false, "end": "2015-07-31 16:10:00", "title": "Many-to-many, minus the middleman", "event_id": 54, "abstract": "This talk is about an alternative Django ManyToManyField implementation that uses (abuses?) PostgreSQL's full-text search engine instead of an intermediary table to store its relationships. As well as showing off some handy things you can do with this field, we'll talk along the way about full-text search in Postgres, inverted indexes, and how Django's ManyToManyField is implemented.\r\n\r\nBehind the scenes, ManyToManyField uses an intermediary table to record its relationships \u2013\u00a0a classic relational database technique you most likely mastered in Databases 101. But to believe some present-day commentators, classic relational databases with their fixed schemas and their ACID habit belong back in the 70s where they came from.\r\n\r\nEnter Postgres, the hip, switched-on parent who works as a public defender and gets on uncomfortably well with your friends. Postgres builds on a wealth of relational history while embracing modern non-relational ideas in a thoughtful, sane way.\r\n\r\nIn this talk, we'll press full-text search, one of Postgres' repertoire of many useful features, into a service it performs remarkably well despite being designed for quite a different purpose. Code and benchmarks provided!", "start": "2015-07-31 15:40:00", "schedule_id": 20, "url": "http://2015.pycon-au.org/schedule/30120/view_talk", "duration": "0:30:00", "presenters": "Alex Hill"}, {"exclusive": false, "end": "2015-08-01 11:00:00", "title": "Slow Down, Compose Yourself - How Composition Can Help You Write Modular, Testable Code", "event_id": 90, "abstract": "As your codebase grows, you will have instances where you have code that needs to be reused. Then you think, I can do this with subclassing! Now you have a diamond-tree of problems.\r\n\r\nHere, we\u2019ll talk about a better way of code reuse and introducing alternate behaviour into existing classes \u2014 composition. It\u2019ll improve how you test your code \u2014 making your test runs faster, making it easier to test exceptional cases, and making everything easier to understand.", "start": "2015-08-01 10:30:00", "schedule_id": 48, "url": "http://2015.pycon-au.org/schedule/30126/view_talk", "duration": "0:30:00", "presenters": "Amber \"Hawkie\" Brown"}, {"exclusive": false, "end": "2015-08-01 11:40:00", "title": "Fang: Pythonic dependency injection", "event_id": 88, "abstract": "Dependency injection (DI) is a technique most often used in \"big OO\" languages like Java and C#. It's usually dismissed by Python developers as only needed because of these other languages' deficiencies: static typing, restrictive object systems, lack of reflection, etc.\r\n\r\nHowever, there are other dynamically-typed languages which do use forms of dependency injection. From looking at these systems, we can see there are some advantages to dependency injection _even if_ you're not using a traditional \"big OO\" language with static types and interfaces. Dependency-injected code can be more modular, much easier to test, easier to analyse, and easier to modify or extend to meet new requirements.\r\n\r\nDespite this, there aren't many dependency-injection systems for Python. The few that do exist aren't \"Pythonic\", or implement DI in ways that compromise a lot of its benefits.\r\n\r\nFang is a library which adds dependency injection to Python in a way which provides real benefits for code clarity, ease of testing, and maintainability, while still fitting naturally into Python's idioms. Fang describes dependencies concisely but explicitly, and doesn't restrict the developer to a particular paradigm on how dependencies are validated or met.\r\n\r\nThis talk will give a brief overview of how DI is used across a few languages (both traditional OO and dynamic languages) and highlight what elements of DI can be beneficial in Python. The talk will then demo how Fang can be used to add DI to Python code, and show some of the benefits to code clarity, unit testing and code analysis.", "start": "2015-08-01 11:10:00", "schedule_id": 51, "url": "http://2015.pycon-au.org/schedule/30114/view_talk", "duration": "0:30:00", "presenters": "Nathan Craike"}, {"exclusive": false, "end": "2015-08-01 12:20:00", "title": "Monads, in my Python?", "event_id": 28, "abstract": "Monads shouldn't be difficult to understand. This talk aims to show what monads are, and why you shouldn't be afraid of them. You most likely use them already (yes, really). \r\n\r\nIn this talk, I'll touch briefly on category theory (don't worry, it's not scary), and a couple of practical implementation of monads. You don't have to be a functional programmer or a Haskeller to use monads.\r\n\r\nLastly I shall attempt to lay out a good rationale to use more monads when programming in Python", "start": "2015-08-01 11:50:00", "schedule_id": 54, "url": "http://2015.pycon-au.org/schedule/30038/view_talk", "duration": "0:30:00", "presenters": "Xuanyi Chew"}, {"exclusive": false, "end": "2015-08-01 13:40:00", "title": "Python's New Type Hints in Action\u2026 In JavaScript", "event_id": 74, "abstract": "Depending on who you ask, PEP 484's Type Hints are either the next big thing in Python, or the harbinger of doom upon our entire community. Which is it?\r\n\r\nAllowing optional static typing in Python will bring with it some benefits that other languages have had for years: IDEs will be able to do code completion better; a whole class of boring tests will fall out automatically; and some bugs will be easier to catch. \r\n\r\nBut this is also undeniably a huge change of direction: will it mean you have to substantially change your code style? Will Python's simple expressiveness suddenly become unattainable thanks to clumsy Java-style type declarations?\r\n\r\nTo show how PEP 484's Gradual Typing system works, we're going to look at TypeScript, a minimal implementation of Gradual Typing over JavaScript. We'll see how the type system works, and how it fits into the already thriving JavaScript developer community, where most people aren't using type hints at all.\r\n\r\nWe'll draw some parallels with how Python's implementation will work, and see what Python can learn from a language that has successfully made the jump to a type-hinted world.", "start": "2015-08-01 13:10:00", "schedule_id": 58, "url": "http://2015.pycon-au.org/schedule/30045/view_talk", "duration": "0:30:00", "presenters": "Christopher Neugebauer"}, {"exclusive": false, "end": "2015-08-01 14:20:00", "title": "Python's Transition to Multilingual Programming", "event_id": 65, "abstract": "\"Ugh, why does Unicode have to be so complicated? It's just text, why can't it be as simple as writing a note for myself?\"\r\n\r\nOne of the more controversial changes in Python 3 is the decision to handle text data entirely as Unicode code points. In this presentation, CPython core developer Nick Coghlan will explore some of the background of that design decision, the capabilities it grants Python 3 over Python 2, and some of the related features of the upcoming Python 3.5 release.", "start": "2015-08-01 13:50:00", "schedule_id": 62, "url": "http://2015.pycon-au.org/schedule/30009/view_talk", "duration": "0:30:00", "presenters": "Nick Coghlan"}, {"exclusive": false, "end": "2015-08-01 15:00:00", "title": "Python on the move: The state of mobile Python", "event_id": 69, "abstract": "Over the last 5-10 years, the \"desktop/server\" split that dominated computing in the 80s, 90s and early 2000s has been joined by a third player - mobile devices such as phones and tablets.\r\n\r\nSo, what is the story for running Python on these devices? Although there hasn't been much to say in the past, the good news is that over the last year, there's been some signficant changes in the landscape, and Python on Mobile is now teetering on the brink of being a genuine reality.\r\n\r\nIn this talk, Russell Keith-Magee will survey the current state of using Python on mobile devices, the work that is currently being done, areas where more work is requried, and the prospects for the future.", "start": "2015-08-01 14:30:00", "schedule_id": 66, "url": "http://2015.pycon-au.org/schedule/30025/view_talk", "duration": "0:30:00", "presenters": "Russell Keith-Magee"}, {"exclusive": false, "end": "2015-08-02 11:00:00", "title": "Inviting Code", "event_id": 79, "abstract": "Projects tend to grow, expand and reshape as they progress, this can lead to; high code maintenance, legacy code and feature addition fatigue. Implementing a well-documented and malleable software architecture is a major step in addressing these associated time sinks. This talk will discuss viable software architecture approaches \u2013 while demonstrating core python modules, concepts and design patterns from a big data perspective.\r\n\r\nMany projects welcome code addition from third party developers, however a well thought out software architecture should not be modified without; review, testing, possible cascading code and documentation changes. To remove the additional complexity of reviewing and handling third party code, designing and offering secure plugin infrastructure can allow for outside additions without the overhead. \r\n\r\nA big data visualisation python project utilised by Oxford and Cambridge universities will be used in code demonstrations to show the direct use of a project built with architecture design in mind, and a multi-level dynamic plugin infrastructure. Attendees will be provided with a clear understanding of how function documentation techniques (PEP-3107 & PEP-0484) can be utilised for class clarity and how to (re)design a code base to allow for integration of third party code, while providing a concise framework for code inclusion. \r\n\r\nAreas covered in this talk include\r\n\r\n\u2022\tPython 3.4 focused\r\n\u2022\tProject architecture design\r\n\u2022\tAbstract classes\r\n\u2022\tPlugin frameworks\r\n\u2022\tDocumentation frameworks\r\n\u2022\tType hinting & Function annotations  \r\n\u2022\tClass method decorators\r\n\u2022\tCode validation\r\n\u2022\tImage manipulation\r\n", "start": "2015-08-02 10:30:00", "schedule_id": 77, "url": "http://2015.pycon-au.org/schedule/30070/view_talk", "duration": "0:30:00", "presenters": "Capel Brunker"}, {"exclusive": false, "end": "2015-08-02 11:40:00", "title": "Easy wins with Cython: fast and multi-core", "event_id": 76, "abstract": "Python has often been criticised for slow runtime performance, and for the GIL which prevents multi-core concurrency. Cython provides tools for addressing both issues, and in a way that is simple enough for the average programmer to use.\r\n\r\nThis talk will show:\r\n\r\n- How to get started with Cython\r\n- Tools to make day-to-day Cython work easier\r\n- How to dramatically speed up a slow function\r\n- How to distribute work over multiple CPU cores", "start": "2015-08-02 11:10:00", "schedule_id": 82, "url": "http://2015.pycon-au.org/schedule/30051/view_talk", "duration": "0:30:00", "presenters": "Caleb Hattingh"}, {"exclusive": false, "end": "2015-08-02 12:20:00", "title": "Rapid prototyping with teenagers", "event_id": 57, "abstract": "\r\nThis is teamwork and rapid prototyping challenges on steroids. Imagine 15 high school kids, most of whom have only just learned to program, working together to design and build a fully functional social networking site in 3 days. \r\n\r\nThis project is done as part of the NCSS (National Computer Science School) summer program. NCSS has been running for 20 years, and I've been involved in the last 7, so that's 6 different social networking sites (we used to build search engines, but apparently they're not cool anymore).\r\n\r\nI'll go through the technical details, the tools we use, how the site functions, and how we structure the different pieces to come together. I'll also show off some extra fun projects we throw at the advanced kids, like building their own Django-like template engine, and secure hashing of passwords.\r\n\r\nA lot of the challenge of this undertaking is inevitably also project management and coordination of the team. These students have never written tests before, don't know what version control is and don't understand what it means to agree on an API. Hilarity and frustration can (and does) ensue, especially during the last night, which is an all-nighter.\r\n\r\nCome along to learn how to do project management with the least experienced team possible and how to hack together a functional prototype webapp with minimum effort.\r\n", "start": "2015-08-02 11:50:00", "schedule_id": 87, "url": "http://2015.pycon-au.org/schedule/30116/view_talk", "duration": "0:30:00", "presenters": "Katie Bell"}, {"exclusive": false, "end": "2015-08-02 13:55:00", "title": "On Being Pythonic", "event_id": 75, "abstract": "Design Patterns, standard designs and idioms in Python\r\n\r\nPythonic (Noun): Uses Python idioms well, that it is natural or shows fluency in the language.\r\n\r\nEven though you\u2019re using Python syntax and keywords, your code still smells like C, Java or Perl. Or just feels like it's not the best way. This tour of Python is about changing the way you think, and to write Python that makes the best use of the language. As a result, your Python will be cleaner, simpler, nicer, and be more readable.\r\n\r\nEven though you know the syntax to make a class and inherit, you don't know when you should. Composition? IsA, HasA, IsLikeA? What about factories, singletons, iterators and adapters?\r\n\r\nMashing together a long and painful background of C, C++, Perl and Java coding, a mind-expanding trip down the Elements of Reusable Object-Oriented Software rabbit hole, and over 30 years programming experience, Peter brings some clarity, reason and ideas on Pythonic idioms and OO design as implemented in Python.", "start": "2015-08-02 13:10:00", "schedule_id": 93, "url": "http://2015.pycon-au.org/schedule/30049/view_talk", "duration": "0:45:00", "presenters": "Peter Lovett"}, {"exclusive": false, "end": "2015-08-02 14:50:00", "title": "\u00a1Mangle You A Python Interpreters for New Behaviour!", "event_id": 24, "abstract": "What happens when you feel some syntax or behaviour is missing from Python? You could fork the interpreter, but then nobody else could run your programs. Instead, you could implement the new behaviour as a Python module to be imported, and distribute it with your programs.\r\n\r\nFollowing hot on the tracks of previous Pycon-AU talks like \"Don't Do This\" (2013) and the \"ugly hacks\" bit of \"Here be dragons: some elegant and ugly hacks in CPython\" (2014), this presentation will grant some of the requests you never dared to make:\r\n\r\n- You'd like for PEP 336, Make None Callable to have succeeded? You can make your own None()! Easy in CPython with CTypes!\r\n\r\n- You'd like to have the \"?.\" operator available for safe attribute access? Just add the syntax to pypy, then use a source codec hack to rewrite it into a legal Python 2.7 function. Too easy!\r\n\r\n- Your reaction to all of this is \u201cplease make it stop\u201d? The talk will finish by discussing why having extensible syntax as a standard Python feature might even be a good idea! It is in other languages!\r\n\r\nThis talk is for intermediate to advanced Python users, and for beginning Python implementors.", "start": "2015-08-02 14:05:00", "schedule_id": 96, "url": "http://2015.pycon-au.org/schedule/30117/view_talk", "duration": "0:45:00", "presenters": "Javier Candeira"}, {"exclusive": false, "end": "2015-07-31 10:50:00", "title": "The one true way of doing Django deployments...", "event_id": 45, "abstract": "...doesn't exist. (Sorry)\r\n\r\nThe power and flexibility of Django comes with drawbacks. One of the toughest for project management is working out how to deploy your Django application. If you ask five different authorities on how you should do it, you'll get six different answers.\r\n\r\nAnd if someone says \"Just use fabric!\": they're not helping.\r\n\r\nRelease management, dependency wrangling, virtualenv care and feeding; to .whl or .deb? To containerize or Heroku-ize? Do you really have to allow your servers unconstrained Internet access just to build your virtualenv?\r\n\r\nAs a Django user, you might end up writing more deployment solutions than Django projects. I know I have.\r\n\r\nThere's no one true way of doing Django deployments, but some work better than others. Maybe I can show you.", "start": "2015-07-31 10:20:00", "schedule_id": 111, "url": "http://2015.pycon-au.org/schedule/30084/view_talk", "duration": "0:30:00", "presenters": "Tom Eastman"}, {"exclusive": false, "end": "2015-07-31 11:35:00", "title": "Moby and the Beanstalk", "event_id": 48, "abstract": "The popularity of Docker these days is incredible and a lot of people are already using it for their production systems. Although it makes a lot of things much simpler, it's not a silver bullet and comes with some caveats of it's own. This talk will describe the journey of my team at Mobify from a self-hosted VM to a AWS-backed web app deployed using Docker.\r\n", "start": "2015-07-31 11:05:00", "schedule_id": 112, "url": "http://2015.pycon-au.org/schedule/30094/view_talk", "duration": "0:30:00", "presenters": "Sebastian Vetter"}, {"exclusive": false, "end": "2015-07-31 12:20:00", "title": "Don't be afraid to search", "event_id": 21, "abstract": "Creating a good search experience for your website is perceived as hard when it doesn't have to be so.\r\n\r\nStarting with what is a search engine and how it works we will introduce the tools and techniques to help you design a search functionality that will make your users happy.\r\n\r\nFrom tips on how to structure your data and tune your settings and queries to improve relevancy to features like faceted navigation and search-as-you-type autocomplete.\r\n\r\nAll examples will be shown using Elasticsearch and Django, though it should be applicable to other technologies as well.", "start": "2015-07-31 11:50:00", "schedule_id": 113, "url": "http://2015.pycon-au.org/schedule/30013/view_talk", "duration": "0:30:00", "presenters": "Honza Kr\u00e1l"}, {"exclusive": false, "end": "2015-07-31 13:40:00", "title": "PostgreSQL in Django 1.8", "event_id": 26, "abstract": "Django 1.8 adds a whole bunch of cool new features that are specifically designed for PostgreSQL. We'll take a quick tour through them, and show when and how you can use them in real-world applications. We'll also talk about how to get the best performance out of PostgreSQL when using the Django ORM.", "start": "2015-07-31 13:10:00", "schedule_id": 114, "url": "http://2015.pycon-au.org/schedule/30033/view_talk", "duration": "0:30:00", "presenters": "Christophe Pettus"}, {"exclusive": false, "end": "2015-07-31 14:25:00", "title": "Recreating the Pycon 2015 site in under 30 minutes", "event_id": 53, "abstract": "Wagtail is a new CMS built for Django. Making sites in it is easy once you know Django. To prove it, I will recreate the Pycon 2015 site as you watch. Live coding - nothing can go wrong!", "start": "2015-07-31 13:55:00", "schedule_id": 115, "url": "http://2015.pycon-au.org/schedule/30104/view_talk", "duration": "0:30:00", "presenters": "Tim Heap"}, {"exclusive": false, "end": "2015-07-31 15:10:00", "title": "Realtime websites with Django and Meteor", "event_id": 63, "abstract": "Create real-time websites and mobile apps that scale using Django and the Meteor JavaScript framework.  Push data changes in real-time from your servers to browsers and app users simultaneously without adding overly complex infrastructure to support the real-time updates.", "start": "2015-07-31 14:40:00", "schedule_id": 116, "url": "http://2015.pycon-au.org/schedule/30124/view_talk", "duration": "0:30:00", "presenters": "Tyson Clugg"}, {"exclusive": false, "end": "2015-07-31 16:50:00", "title": "Integrating Django with Identity Management Systems", "event_id": 35, "abstract": "Most Django developers are familiar with authentication and\r\nauthorisation on the open web, but the requirements and technologies\r\nused inside companies and large organisations are different:\r\n\r\n- Identities and groups are probably stored in an external identity\r\n  management system's directory rather than in an application's\r\n  database tables.\r\n\r\n- Authorisation decisions will be based on group membership and\r\n  policies that are defined outside the application.\r\n\r\n- Users may be expected or required to use a *single sign-on*\r\n  technology such as Kerberos or SAML to authenticate to applications.\r\n\r\nThis talk will familiarise the audience with these technologies\r\nand demonstrate how Django applications can be integrated\r\nwith an identity management system to meet business\r\nrequirements while providing a positive user experience.  Particular\r\ntechnologies covered will include:\r\n\r\n- FreeIPA: an open-source identity management solution, for defining\r\n  users, groups and authorisation policies\r\n\r\n- mod_auth_gssapi / mod_auth_kerb: Apache modules for Kerberos\r\n  authentication\r\n\r\n- mod_lookup_identity: Apache module to retrieve user information\r\n  from a directory\r\n\r\nThe talk will conclude with discussion about upcoming Kerberos\r\nfeatures, techniques for dealing with multiple authentication\r\nmethods, and progress in making identity management integration\r\neasier for Django developers.\r\n\r\nPeople developing or deploying Django applications in business\r\nenvironments or for large open source projects with centralised\r\nidentity management will get the most out of this talk.", "start": "2015-07-31 16:20:00", "schedule_id": 117, "url": "http://2015.pycon-au.org/schedule/30058/view_talk", "duration": "0:30:00", "presenters": "Fraser Tweedale"}, {"exclusive": false, "end": "2015-07-31 17:30:00", "title": "Stop and smell the Djangos", "event_id": 56, "abstract": "A great strength of Django is how much functionality there is baked in without the developer doing anything to obtain it.\r\n\r\nA corollary of this is that there\u2019s a great deal of functionality in Django which the average developer is hardly aware exists. The happy dev is pleased to ignore the problems that have been solved for them as their requests rush in and their responses rush out.\r\n\r\nThere's Middleware, Signals, Authentication, Caching, Internationalization, Serialization and ... a lot more and that's just the core framework.\r\n\r\nIn this talk we\u2019re going to stop and admire the view .\r\n\r\nWe\u2019ll demonstrate the effects that these core aspects of Django have on a request - response cycle by reviewing how they work and feeling the pain of what life would be like without them.\r\n\r\nMy talk is aimed at the average Django dev who has been happy to ignore what goes on under the hood. By better understanding the machinery that Django relies on it gives us all the opportunity to exploit it in our work and, of course, to impress our colleagues !\r\n", "start": "2015-07-31 17:00:00", "schedule_id": 118, "url": "http://2015.pycon-au.org/schedule/30115/view_talk", "duration": "0:30:00", "presenters": "Richard Shea"}], "Foyer": [{"exclusive": true, "end": "2015-07-31 09:00:00", "title": "Registration", "event_id": 1, "abstract": "", "start": "2015-07-31 08:00:00", "schedule_id": 7, "duration": "1:00:00"}, {"exclusive": true, "end": "2015-08-01 09:00:00", "title": "Registration", "event_id": 1, "abstract": "", "start": "2015-08-01 08:00:00", "schedule_id": 23, "duration": "1:00:00"}, {"exclusive": true, "end": "2015-08-02 09:00:00", "title": "Registration", "event_id": 1, "abstract": "", "start": "2015-08-02 08:00:00", "schedule_id": 33, "duration": "1:00:00"}, {"exclusive": true, "end": "2015-08-01 08:00:00", "title": "PyLadies Breakfast sponsored by New Relic \u2013 Come any time until 9:00am!", "event_id": 114, "abstract": "", "start": "2015-08-01 07:00:00", "schedule_id": 154, "duration": "1:00:00"}], "Connaught & King George ": [{"exclusive": true, "end": "2015-07-31 10:20:00", "title": "Morning Tea \u2013 Sponsored by HP", "event_id": 115, "abstract": "", "start": "2015-07-31 09:50:00", "schedule_id": 8, "duration": "0:30:00"}, {"exclusive": true, "end": "2015-07-31 13:10:00", "title": "Lunch", "event_id": 6, "abstract": "", "start": "2015-07-31 12:20:00", "schedule_id": 13, "duration": "0:50:00"}, {"exclusive": true, "end": "2015-07-31 15:40:00", "title": "Afternoon Tea \u2013 Sponsored by HP", "event_id": 116, "abstract": "", "start": "2015-07-31 15:10:00", "schedule_id": 18, "duration": "0:30:00"}, {"exclusive": true, "end": "2015-08-01 10:30:00", "title": "Morning Tea \u2013 Sponsored by Sauce Labs", "event_id": 117, "abstract": "", "start": "2015-08-01 10:00:00", "schedule_id": 25, "duration": "0:30:00"}, {"exclusive": true, "end": "2015-08-01 13:10:00", "title": "Lunch", "event_id": 6, "abstract": "", "start": "2015-08-01 12:20:00", "schedule_id": 26, "duration": "0:50:00"}, {"exclusive": true, "end": "2015-08-01 15:30:00", "title": "Afternoon Tea \u2013 Sponsored by Sauce Labs", "event_id": 118, "abstract": "", "start": "2015-08-01 15:00:00", "schedule_id": 27, "duration": "0:30:00"}, {"exclusive": true, "end": "2015-08-02 10:30:00", "title": "Morning Tea", "event_id": 4, "abstract": "", "start": "2015-08-02 10:00:00", "schedule_id": 35, "duration": "0:30:00"}, {"exclusive": true, "end": "2015-08-02 13:10:00", "title": "Lunch", "event_id": 6, "abstract": "", "start": "2015-08-02 12:20:00", "schedule_id": 37, "duration": "0:50:00"}, {"exclusive": true, "end": "2015-08-02 15:30:00", "title": "Afternoon Tea", "event_id": 5, "abstract": "", "start": "2015-08-02 15:00:00", "schedule_id": 38, "duration": "0:30:00"}], "Roosevelt & Kennedy": [{"exclusive": true, "end": "2015-08-01 10:00:00", "title": "Keynote: Designed for education: a Python solution", "event_id": 111, "abstract": "The problem of introducing children to programming and computer science has seen growing attention in the past few years. Initiatives like Raspberry Pi, Code Club, code.org, (and many more) have been created to help solve this problem. With the introduction of a national computing curriculum in the UK, teachers have been searching for a text based programming language to help teach computational thinking as a follow on from visual languages like Scratch.\r\n\r\nThe educational community has been served well by Python, benefiting from its straight-forward syntax, large selection of libraries, and supportive community. Education-focused summits are now a major part of most major Python Conferences. Assistance in terms of documentation and training is invaluable, but perhaps there are technical means of improving the experience of those using Python in education. Clearly the needs of teachers and their students are different to those of the seasoned programmer. Children are unlikely to come to their teachers with frustrations about the Global Interpreter Lock! But issues such as usability of IDEs or comprehensibility of error messages are of utmost importance.\r\n\r\nIn this keynote, Carrie Anne will discuss existing barriers to Python becoming the premier language of choice for teaching computer science, and how learning Python could be helped immensely through tooling and further support from the Python developer community.", "start": "2015-08-01 09:00:00", "schedule_id": 24, "url": "http://2015.pycon-au.org/schedule/30150/view_talk", "duration": "1:00:00", "presenters": "Carrie Anne Philbin"}, {"exclusive": true, "end": "2015-08-01 17:30:00", "title": "Lightning talks", "event_id": 7, "abstract": "", "start": "2015-08-01 16:40:00", "schedule_id": 28, "duration": "0:50:00"}, {"exclusive": true, "end": "2015-08-02 10:00:00", "title": "Keynote: Consequences of an Insightful Algorithm", "event_id": 110, "abstract": "We have ethical responsibilities when coding. We\u2019re able to extract remarkably precise intuitions about an individual. But do we have a right to know what they didn\u2019t consent to share, even when they willingly shared the data that leads us there? A major retailer\u2019s data-driven marketing accidentally revealed to a teen\u2019s family that she was pregnant. Eek.\r\n\r\nWhat are our obligations to people who did not expect themselves to be so intimately known without sharing directly? How do we mitigate against unintended outcomes? For instance, an activity tracker carelessly revealed users\u2019 sexual activity data to search engines. A social network\u2019s algorithm accidentally triggered painful memories for grieving families who\u2019d recently experienced death of their child and other loved ones.\r\n\r\nWe design software for humans. Balancing human needs and business specs can be tough. It\u2019s crucial that we learn how to build in systematic empathy.\r\n\r\nIn this talk, we\u2019ll delve into specific examples of uncritical programming, and painful results from using insightful data in ways that were benignly intended. You\u2019ll learn ways we can integrate practices for examining how our code might harm individuals. We\u2019ll look at how to flip the paradigm, netting consequences that can be better for everyone.", "start": "2015-08-02 09:00:00", "schedule_id": 34, "url": "http://2015.pycon-au.org/schedule/30105/view_talk", "duration": "1:00:00", "presenters": "Carina C. Zona"}, {"exclusive": true, "end": "2015-08-02 16:40:00", "title": "Sprinting For Beginners", "event_id": 16, "abstract": "What do sprinters eat before a race?\r\nNothing, they fast.\r\n\r\nSprinting at PyCon AU is not like that at all. Instead, it's a great chance to do something good for the community and get to know some fellow devs along the way. The sprints are an semi-formal two-day event following the close of the main track of the conference where people get together and code on whatever takes their fancy. Most of the time, it's a a chance to work on an open source package you're already involved with in some way, or to meet face-to-face with people you otherwise know only by email.\r\n\r\nHowever, there are also those brave souls who are joining in for the first time. It can be particularly intimidating if you don't know the others there or how to really get started. This presentation will talk about the sprint format, how to get in with a sprint group, and how to be productive in such a short time (especially if you're new to the concept).\r\n\r\nWe'll cover off basics like getting your environment set up, checking out the code, and identifying appropriate projects and tasks to work on. Standard workflows and tips on how and when to approach people for assistance can also help to make things flow more smoothly.\r\n\r\nIt will also include some tips for sprint leaders about how to make your project easy and enjoyable for others to hack on. There is a lot than can be done without a lot of effort, such as pre-classifying bugs or identifying appropriate tasks for newcomers, identifying \"go-to\" people in your project, and spending time on the day talking to people and getting them comfortable working on your code. Clearly documenting simple workflows (like how to submit a patch, what code standards are used, and how to validate results) can help tremendously.\r\n\r\nWith any luck, this presentation can help both sprint leaders and attendees with a smoother experience which gets the difficulties out the way and leaves maximum opportunity for coding and enjoyment.\r\n\r\nTennessee has gone through the meatgrinder of sprinting, from sitting down with a group of strangers trying to help them fix trivial bugs, to developing significant extensions, to leading sprints. With the scars to show and lessons learned, he is in a reasonable position to help suggest some simple things that can make sprinting easier and more enjoyable for the newcomer.", "start": "2015-08-02 16:10:00", "schedule_id": 39, "url": "http://2015.pycon-au.org/schedule/30039/view_talk", "duration": "0:30:00", "presenters": "Tennessee Leeuwenburg"}, {"exclusive": true, "end": "2015-08-02 18:00:00", "title": "Lightning Talks & Closing", "event_id": 3, "abstract": "", "start": "2015-08-02 16:40:00", "schedule_id": 40, "duration": "1:20:00"}, {"exclusive": false, "end": "2015-08-01 16:00:00", "title": "Python for less than $7", "event_id": 78, "abstract": "You can now run Python 3.4 on microcontrollers that cost less than a cup of coffee (in a up-market Parisian restaurant :)\r\n\r\nMicroPython (http://www.micropython.org/) is a very active port of Python 3 to low-end microcontrollers with minimal RAM (eg. 192k RAM, yes: \"k\", as in kilobytes) but lots of useful I/O.\r\n\r\nLearn how to set up a very cheap microcontroller with wifi and a range of I/O and then program it with MicroPython.\r\n\r\nThe live demos are guaranteed to fail in spectacular ways as all live demos do, but will hopefully show enough blinking lights to tempt you to leave your i7 hyperthreaded clusters and join the cute but very practical world of cheap, embedded Python.", "start": "2015-08-01 15:30:00", "schedule_id": 71, "url": "http://2015.pycon-au.org/schedule/30068/view_talk", "duration": "0:30:00", "presenters": "Graeme Cross"}, {"exclusive": false, "end": "2015-08-01 16:40:00", "title": "Build a Better Hat Rack: All Contributions Welcome", "event_id": 68, "abstract": "We have many ways of reporting and recognising our code contributions in open source projects, but often it is the work we do outside of code commits themselves that get forgotten and unattributed. Hours of code review, documentation, testing; organising of meetups and volunteering at conferences; even just brainstorming and talking about things - how much of these have you done without accreditation? \r\n\r\nDuring this session, we will discuss what it means to contribute to open source projects, what constitutes a non-code contribution, steps we can take to recognise the work of our peers, and how projects can better encourage non-code participation through recognition and acknowledgement.\r\n\r\n#LABHR is an original concept by Leslie Hawthorn, http://hawthornlandings.org/2015/02/13/a-place-to-hang-your-hat/", "start": "2015-08-01 16:10:00", "schedule_id": 73, "url": "http://2015.pycon-au.org/schedule/30023/view_talk", "duration": "0:30:00", "presenters": "Katie McLaughlin"}, {"exclusive": false, "end": "2015-08-02 16:00:00", "title": "12 years of Pylint (or How I learned to stop worrying about bugs)", "event_id": 32, "abstract": "Given the dynamic nature of Python, some bugs tend to creep in our codebases. Innocents NameErrors or hard-to-find bugs with variables used in a closure, but defined in a loop, they all stand no chance in front of Pylint (http://pylint.org/).\r\n\r\nIn this talk, I\u2019ll present one of the oldest static analysis tools for Python, with emphasis on what it can do to understand your Python code. Pylint is both a style checker, enforcing PEP 8 rules, as well as a code checker in the vein of pyflakes and the likes, but its true power isn\u2019t always obvious to the eye of beholder. It can detect simple bugs such as unused variables and imports, but it can also detect more complicated cases such as invalid arguments passed to functions, it understands the method resolution order of your classes and what special methods aren\u2019t implemented correctly. \r\n\r\nStarting from abstract syntax trees, we\u2019ll go through its inference engine and we\u2019ll see how Pylint understands the logical flow of your program and what sort of type hinting techniques are used to improve its inference, including PEP 484 type hints. As a bonus, I\u2019ll show how it can be used to help you port your long-forgotten library to Python 3, using its new \u2013py3k mode.", "start": "2015-08-02 15:30:00", "schedule_id": 100, "url": "http://2015.pycon-au.org/schedule/30047/view_talk", "duration": "0:30:00", "presenters": "Claudiu Popa"}], "Presidential Foyer": [{"exclusive": true, "end": "2015-08-01 19:30:00", "title": "Pre-Dinner Drinks \u2013\u00a0Sponsored by The Interaction Consortium", "event_id": 13, "abstract": "", "start": "2015-08-01 19:00:00", "schedule_id": 30, "duration": "0:30:00"}]}